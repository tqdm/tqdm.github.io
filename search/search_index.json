{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#tqdm","title":"tqdm","text":"<p><code>tqdm</code> means \"progress\" in Arabic (taqadum, \u062a\u0642\u062f\u0651\u0645) and is an abbreviation for \"I love you so much\" in Spanish (te quiero demasiado).</p> <p>Instantly make your loops show a smart progress meter - just wrap any iterable with <code>tqdm(iterable)</code>, and you're done!</p> <pre><code>from tqdm import tqdm\nfor i in tqdm(range(10000)):\n    ...\n</code></pre> <p><code>76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 | 7568/10000 [00:33&lt;00:10, 229.00it/s]</code></p> <p><code>trange(N)</code> can be also used as a convenient shortcut for <code>tqdm(range(N))</code>.</p> <p></p> <p> </p> <p>It can also be executed as a module with pipes:</p> <pre><code>$ seq 9999999 | tqdm --bytes | wc -l\n75.2MB [00:00, 217MB/s]\n9999999\n$ 7z a -bd -r backup.7z docs/ | grep Compressing | \\\ntqdm --total $(find docs/ -type f | wc -l) --unit files &gt;&gt; backup.log\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589| 8014/8014 [01:37&lt;00:00, 82.29files/s]\n</code></pre> <p>Overhead is low -- about 60ns per iteration (80ns with <code>tqdm_gui</code>), and is unit tested against performance regression. By comparison, the well-established ProgressBar has an 800ns/iter overhead.</p> <p>In addition to its low overhead, <code>tqdm</code> uses smart algorithms to predict the remaining time and to skip unnecessary iteration displays, which allows for a negligible overhead in most cases.</p> <p><code>tqdm</code> works on any platform (Linux, Windows, Mac, FreeBSD, NetBSD, Solaris/SunOS), in any console or in a GUI, and is also friendly with IPython/Jupyter notebooks.</p> <p><code>tqdm</code> does not require any dependencies (not even <code>curses</code>!), just Python and an environment supporting <code>carriage return \\r</code> and <code>line feed \\n</code> control characters.</p> <p> </p>"},{"location":"contributing/","title":"HOW TO CONTRIBUTE TO TQDM","text":"<p>TL;DR: Skip to [QUICK DEV SUMMARY]</p> <p>This file describes how to</p> <ul> <li>contribute changes to the project, and</li> <li>upload released to the PyPI repository.</li> </ul> <p>Most of the management commands have been directly placed inside the Makefile:</p> <pre><code>make [&lt;alias&gt;]  # on UNIX-like environments\npython -m pymake [&lt;alias&gt;]  # if make is unavailable\n</code></pre> <p>The latter depends on <code>py-make&gt;=0.1.0</code>.</p> <p>Use the alias <code>help</code> (or leave blank) to list all available aliases.</p>"},{"location":"contributing/#how-to-commit-contributions","title":"HOW TO COMMIT CONTRIBUTIONS","text":"<p>Contributions to the project are made using the \"Fork &amp; Pull\" model. The typical steps would be:</p> <ol> <li>create an account on github</li> <li>fork <code>tqdm</code></li> <li>make a local clone: <code>git clone https://github.com/your_account/tqdm.git</code></li> <li>make changes on the local copy</li> <li>test (see below) and commit changes <code>git commit -a -m \"my message\"</code></li> <li><code>push</code> to your GitHub account: <code>git push origin</code></li> <li>create a Pull Request (PR) from your GitHub fork (go to your fork's webpage and click on \"Pull Request.\" You can then add a message to describe your proposal.)</li> </ol>"},{"location":"contributing/#what-code-layout-should-i-follow","title":"WHAT CODE LAYOUT SHOULD I FOLLOW?","text":"<p>Don't worry too much - maintainers can help reorganise contributions. However it would be helpful to bear in mind:</p> <ul> <li>The standard core of <code>tqdm</code>, i.e. <code>tqdm.std.tqdm</code><ul> <li>must have no dependencies apart from pure python built-in standard libraries</li> <li>must have negligible impact on performance</li> <li>should have 100% coverage by unit tests</li> <li>should be appropriately commented</li> <li>should have well-formatted docstrings for functions<ul> <li>under 76 chars (incl. initial spaces) to avoid linebreaks in terminal pagers</li> <li>use two spaces between variable name and colon, specify a type, and most likely state that it's optional: <code>VAR&lt;space&gt;&lt;space&gt;:&lt;space&gt;TYPE[, optional]</code></li> <li>use [default: ...] for default values of keyword arguments</li> </ul> </li> <li>will not break backward compatibility unless there is a very good reason<ul> <li>e.g. breaking py26 compatibility purely in favour of minor readability changes (such as converting <code>dict(a=1)</code> to <code>{'a': 1}</code>) is not a good enough reason</li> </ul> </li> <li>API changes should be discussed carefully</li> <li>remember, with millions of downloads per month, <code>tqdm</code> must be extremely fast and reliable</li> </ul> </li> <li>Any other kind of change may be included in a (possibly new) submodule<ul> <li>submodules are likely single python files under the main tqdm/ directory</li> <li>submodules extending <code>tqdm.std.tqdm</code> or any other module (e.g. <code>tqdm.notebook.tqdm</code>, <code>tqdm.gui.tqdm</code>)</li> <li>CLI wrapper <code>tqdm.cli</code><ul> <li>if a newly added <code>tqdm.std.tqdm</code> option is not supported by the CLI, append to <code>tqdm.cli.UNSUPPORTED_OPTS</code></li> </ul> </li> <li>can implement anything from experimental new features to support for third-party libraries such as <code>pandas</code>, <code>numpy</code>, etc.</li> <li>submodule maturity<ul> <li>alpha: experimental; missing unit tests, comments, and/or feedback; raises <code>tqdm.TqdmExperimentalWarning</code></li> <li>beta: well-used; commented, perhaps still missing tests</li> <li>stable: &gt;10 users; commented, 80% coverage</li> </ul> </li> </ul> </li> <li><code>.meta/</code><ul> <li>A \"hidden\" folder containing helper utilities not strictly part of the <code>tqdm</code> distribution itself</li> </ul> </li> </ul>"},{"location":"contributing/#testing","title":"TESTING","text":"<p>Once again, don't worry too much - tests are automated online, and maintainers can also help.</p> <p>To test functionality (such as before submitting a Pull Request), there are a number of unit tests.</p>"},{"location":"contributing/#standard-unit-tests","title":"Standard unit tests","text":"<p>The standard way to run the tests:</p> <ul> <li>install <code>tox</code></li> <li><code>cd</code> to the root of the <code>tqdm</code> directory (in the same folder as this file)</li> <li>run the following command:</li> </ul> <pre><code>[python -m py]make test\n# or:\ntox --skip-missing-interpreters\n</code></pre> <p>This will build the module and run the tests in a virtual environment. Errors and coverage rates will be output to the console/log. (Ignore missing interpreters errors - these are due to the local machine missing certain versions of Python.)</p> <p>Note: to install all versions of the Python interpreter that are specified in tox.ini, you can use <code>MiniConda</code> to install a minimal setup. You must also make sure that each distribution has an alias to call the Python interpreter: <code>python27</code> for Python 2.7's interpreter, <code>python32</code> for Python 3.2's, etc.</p>"},{"location":"contributing/#alternative-unit-tests-with-pytest","title":"Alternative unit tests with pytest","text":"<p>Alternatively, use <code>pytest</code> to run the tests just for the current Python version:</p> <ul> <li>install test requirements: <code>[python -m py]make install_test</code></li> <li>run the following command:</li> </ul> <pre><code>[python -m py]make alltests\n</code></pre>"},{"location":"contributing/#manage-a-new-release","title":"MANAGE A NEW RELEASE","text":"<p>This section is intended for the project's maintainers and describes how to build and upload a new release. Once again, <code>[python -m py]make [&lt;alias&gt;]</code> will help. Also consider <code>pip install</code>ing development utilities: <code>[python -m py]make install_build</code> at a minimum, or a more thorough <code>conda env create</code>.</p>"},{"location":"contributing/#pre-commit-hook","title":"Pre-commit Hook","text":"<p>It's probably a good idea to use the <code>pre-commit</code> (<code>pip install pre-commit</code>) helper.</p> <p>Run <code>pre-commit install</code> for convenient local sanity-checking.</p>"},{"location":"contributing/#semantic-versioning","title":"Semantic Versioning","text":"<p>The <code>tqdm</code> repository managers should:</p> <ul> <li>follow the Semantic Versioning convention for tagging</li> </ul>"},{"location":"contributing/#checking-pyprojecttoml","title":"Checking <code>pyproject.toml</code>","text":"<p>To check that the <code>pyproject.toml</code> file is compliant with PyPI requirements (e.g. version number; reStructuredText in <code>README.rst</code>) use:</p> <pre><code>[python -m py]make testsetup\n</code></pre> <p>To upload just metadata (including overwriting mistakenly uploaded metadata) to PyPI, use:</p> <pre><code>[python -m py]make pypimeta\n</code></pre>"},{"location":"contributing/#merging-pull-requests","title":"Merging Pull Requests","text":"<p>This section describes how to cleanly merge PRs.</p>"},{"location":"contributing/#1-rebase","title":"1 Rebase","text":"<p>From your project repository, merge and test (replace <code>pr-branch-name</code> as appropriate):</p> <pre><code>git fetch origin\ngit checkout -b pr-branch-name origin/pr-branch-name\ngit rebase master\n</code></pre> <p>If there are conflicts:</p> <pre><code>git mergetool\ngit rebase --continue\n</code></pre>"},{"location":"contributing/#2-push","title":"2 Push","text":"<p>Update branch with the rebased history:</p> <pre><code>git push origin pr-branch-name --force\n</code></pre> <p>Non maintainers can stop here.</p> <p>Note: NEVER just <code>git push --force</code> (this will push all local branches, overwriting remotes).</p>"},{"location":"contributing/#3-merge","title":"3 Merge","text":"<pre><code>git checkout master\ngit merge --no-ff pr-branch-name\n</code></pre>"},{"location":"contributing/#4-test","title":"4 Test","text":"<pre><code>[python -m py]make alltests\n</code></pre>"},{"location":"contributing/#5-push-to-master","title":"5 Push to master","text":"<pre><code>git push origin master\n</code></pre>"},{"location":"contributing/#building-a-release-and-uploading-to-pypi","title":"Building a Release and Uploading to PyPI","text":"<p>Formally publishing requires additional steps: testing and tagging.</p>"},{"location":"contributing/#test","title":"Test","text":"<p>Ensure that all online CI tests have passed.</p>"},{"location":"contributing/#tag","title":"Tag","text":"<ul> <li>ensure the version has been tagged. The tag format is <code>v{major}.{minor}.{patch}</code>, for example: <code>v4.4.1</code>. The current commit's tag is used in the version checking process. If the current commit is not tagged appropriately, the version will display as <code>v{major}.{minor}.{patch}.dev{N}+g{commit_hash}</code>.</li> </ul>"},{"location":"contributing/#upload","title":"Upload","text":"<p>GitHub Actions (GHA) CI should automatically do this after pushing tags. Manual instructions are given below in case of failure.</p> <p>Build <code>tqdm</code> into a distributable python package:</p> <pre><code>[python -m py]make build\n</code></pre> <p>This will generate several builds in the <code>dist/</code> folder. On non-windows machines the windows <code>exe</code> installer may fail to build. This is normal.</p> <p>Finally, upload everything to PyPI. This can be done easily using the twine module:</p> <pre><code>[python -m py]make pypi\n</code></pre> <p>Also, the new release can (should) be added to GitHub by creating a new release from the web interface; uploading packages from the <code>dist/</code> folder created by <code>[python -m py]make build</code>. The wiki can be automatically updated with GitHub release notes by running <code>make</code> within the wiki repository.</p> <p>Docker images may be uploaded to https://hub.docker.com/r/tqdm/tqdm. Assuming <code>docker</code> is installed:</p> <pre><code>make -B docker\ndocker login\ndocker push tqdm/tqdm:latest\ndocker push tqdm/tqdm:$(docker run -i --rm tqdm/tqdm -v)\n</code></pre> <p>Snaps may be uploaded to https://snapcraft.io/tqdm. Assuming <code>snapcraft</code> is installed (<code>snap install snapcraft --classic --beta</code>):</p> <pre><code>make snap\nsnapcraft login\nsnapcraft push tqdm*.snap --release stable\n</code></pre>"},{"location":"contributing/#notes","title":"Notes","text":"<ul> <li>you can also test on the PyPI test servers <code>test.pypi.org</code> before the real deployment</li> <li>in case of a mistake, you can delete an uploaded release on PyPI, but you cannot re-upload another with the same version number</li> <li>in case of a mistake in the metadata on PyPI (e.g. bad README), updating just the metadata is possible: <code>[python -m py]make pypimeta</code></li> </ul>"},{"location":"contributing/#updating-websites","title":"Updating Websites","text":"<p>The most important file is <code>.readme.rst</code>, which should always be kept up-to-date and in sync with the in-line source documentation. This will affect all of the following:</p> <ul> <li><code>README.rst</code> (generated by <code>mkdocs.py</code> during <code>make build</code>)</li> <li>The main repository site which automatically   serves the latest <code>README.rst</code> as well as links to all of GitHub's features.   This is the preferred online referral link for <code>tqdm</code>.</li> <li>The PyPI mirror which automatically   serves the latest release built from <code>README.rst</code> as well as links to past   releases.</li> <li>Many external web crawlers.</li> </ul> <p>Additionally (less maintained), there exists:</p> <ul> <li>A wiki which is publicly editable.</li> <li>The gh-pages project which is built from the   gh-pages branch, which is   built using asv.</li> <li>The gh-pages root which is built from a separate   github.io repo.</li> </ul>"},{"location":"contributing/#helper-bots","title":"Helper Bots","text":"<p>There are some helpers in .github/workflows to assist with maintenance.</p> <ul> <li>Comment Bot<ul> <li>allows maintainers to write <code>/tag vM.m.p commit_hash</code> in an issue/PR to create a tag</li> </ul> </li> <li>Post Release<ul> <li>automatically updates the wiki</li> <li>automatically updates the gh-pages root</li> </ul> </li> <li>Benchmark<ul> <li>automatically updates the gh-pages project</li> </ul> </li> </ul>"},{"location":"contributing/#quick-dev-summary","title":"QUICK DEV SUMMARY","text":"<p>For experienced devs, once happy with local master, follow the steps below. Much is automated so really it's steps 1-5, then 11(a).</p> <ol> <li>test (<code>[python -m py]make alltests</code> or rely on <code>pre-commit</code>)</li> <li><code>git commit [--amend]  # -m \"bump version\"</code></li> <li><code>git push</code></li> <li>wait for tests to pass     a) in case of failure, fix and go back to (1)</li> <li><code>git tag vM.m.p &amp;&amp; git push --tags</code> or comment <code>/tag vM.m.p commit_hash</code></li> <li><code>[AUTO:GHA]</code> <code>[python -m py]make distclean</code></li> <li><code>[AUTO:GHA]</code> <code>[python -m py]make build</code></li> <li><code>[AUTO:GHA]</code> upload to PyPI. either:     a) <code>[python -m py]make pypi</code>, or     b) <code>twine upload -s -i $(git config user.signingkey) dist/tqdm-*</code></li> <li><code>[AUTO:GHA]</code> upload to docker hub:     a) <code>make -B docker</code>     b) <code>docker push tqdm/tqdm:latest</code>     c) <code>docker push tqdm/tqdm:$(docker run -i --rm tqdm/tqdm -v)</code></li> <li><code>[AUTO:GHA]</code> upload to snapcraft:     a) <code>make snap</code>, and     b) <code>snapcraft push tqdm*.snap --release stable</code></li> <li>Wait for GHA to draft a new release on https://github.com/tqdm/tqdm/releases     a) replace the commit history with helpful release notes, and click publish     b) <code>[AUTO:GHA]</code> attach <code>dist/tqdm-*</code> binaries        (usually only <code>*.whl*</code>)</li> <li><code>[SUB][AUTO:GHA-rel]</code> run <code>make</code> in the <code>wiki</code> submodule to update release notes</li> <li><code>[SUB][AUTO:GHA-rel]</code> run <code>make deploy</code> in the <code>docs</code> submodule to update website</li> <li><code>[SUB][AUTO:GHA-rel]</code> accept the automated PR in the <code>feedstock</code> submodule to update conda</li> <li><code>[AUTO:GHA-rel]</code> update the gh-pages project benchmarks     a) <code>[python -m py]make testasvfull</code>     b) <code>asv gh-pages</code></li> </ol> <p>Key:</p> <ul> <li><code>[AUTO:GHA]</code>: GitHub Actions CI should automatically do this after <code>git push --tags</code> (5)</li> <li><code>[AUTO:GHA-rel]</code>: GitHub Actions CI should automatically do this after release (11a)</li> <li><code>[SUB]</code>:  Requires one-time <code>make submodules</code> to clone <code>docs</code>, <code>wiki</code>, and <code>feedstock</code></li> </ul>"},{"location":"licence/","title":"Licence","text":"<p><code>tqdm</code> is a product of collaborative work. Unless otherwise stated, all authors (see commit logs) retain copyright for their respective work, and release the work under the MIT licence (text below).</p> <p>Exceptions or notable authors are listed below in reverse chronological order:</p> <ul> <li>files: *   MPL-2.0 2015-2023 (c) Casper da Costa-Luis   casperdcl.</li> <li>files: tqdm/_tqdm.py   MIT 2016 (c) PR #96 on behalf of Google Inc.</li> <li>files: tqdm/_tqdm.py README.rst .gitignore   MIT 2013 (c) Noam Yorav-Raphael, original author.</li> </ul>"},{"location":"licence/#mozilla-public-licence-mpl-v-20-exhibit-a","title":"Mozilla Public Licence (MPL) v. 2.0 - Exhibit A","text":"<p>This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this project, You can obtain one at https://mozilla.org/MPL/2.0/.</p>"},{"location":"licence/#mit-license-mit","title":"MIT License (MIT)","text":"<p>Copyright (c) 2013 noamraph</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"merch/","title":"Shop","text":"<p>Did <code>tqdm</code> save you time? Did it make your life easier? Did it save your skin? Show your support; get some swag! We now have branded merch for you for under $20 including worldwide shipping.</p> <p>Tip</p> <p>All profits (only about $2/item after manufacturing, shipping &amp; taxes) help keep your favourite progress bar running.</p>"},{"location":"merch/#snapback-hat","title":"Snapback Hat","text":"<p>Progress begins in the mind.</p> <p></p> Snapback Hat details  Classic Snapback with a traditional structured fit and flat visor made from a premium wool blend.  <ul> <li>80% acrylic, 20% wool</li> <li>Green Camo is 60% cotton, 40% polyester</li> <li>Structured, 6-panel, high-profile</li> <li>Embroidered `tqdm` logo</li> <li>6 embroidered eyelets</li> <li>Plastic snap closure</li> <li>Green undervisor</li> <li>Head circumference: 21\u215d\"\u201323\u215d\" (54.9cm\u201360cm)</li> </ul>"},{"location":"merch/#snapback-hat-colours","title":"Colours","text":"<ul> <li>Black</li> <li>Black/Neon pink</li> <li>Black/Red</li> <li>Black/Silver</li> <li>Black/Teal</li> <li>Dark Grey</li> <li>Green Camo</li> <li>Heather Grey/Navy</li> <li>Heather Grey/Red</li> <li>Natural/Black</li> </ul>"},{"location":"merch/#mugs","title":"Mugs","text":"<p>My brain will finish loading just as soon as I finish this cup.</p> <p></p> Mug details <ul> <li>Ceramic</li> <li>Dishwasher and microwave safe</li> </ul>"},{"location":"merch/#mugs-sizes","title":"Sizes","text":"<ul> <li>  11oz (315ml) mug dimensions: 3.85\" (9.8cm) in height, 3.35\" (8.5cm) in diameter</li> <li>  15oz (425ml) mug dimensions: 4.7\" (12cm) in height, 3.35\" (8.5cm) in diameter</li> </ul>"},{"location":"merch/#t-shirts","title":"T-Shirts","text":"<p>I waited patiently and all I got was this stupid T-Shirt.</p> <p></p> T-Shirt details  Gildan softstyle t-shirt made of durable cotton fabric with double-stitched bottom hem and sleeves.  <ul> <li>Solid colors are 100% ring-spun cotton</li> <li>Sport Grey is 90% ring-spun cotton, 10% polyester</li> <li>Dark Heather is 65% polyester, 35% cotton</li> <li>Fabric weight: 4.5 oz/yd\u00b2 (153 g/m\u00b2)</li> <li>Pre-shrunk for extra durability</li> <li>Regular fit</li> <li>Tubular construction</li> <li>Shoulder-to-shoulder taping</li> <li>Quarter-turned to avoid crease down the centre</li> </ul>"},{"location":"merch/#t-shirts-colours","title":"Colours","text":"<ul> <li>Black</li> <li>Dark Heather</li> <li>Navy</li> <li>Sport Grey</li> <li>White</li> </ul>"},{"location":"merch/#t-shirts-sizes","title":"Sizes","text":"SMLXLXXLXXXL Length (Worldwide) (inches)2829 \u00bc30 \u00bc31 \u00bc32 \u00bd33 \u00bd Width (Worldwide) (inches)182022242628 Length (East Asia) (inches)26 \u215c27 \u00bd28 \u00be29 \u00bd30 \u00bc Width (East Asia) (inches)18 \u00bd19 \u00be20 \u215e2223 \u00bc   If you need something larger than XL, please email us in advance to ask about availability!"},{"location":"merch/#order","title":"Order","text":"<p>The steps are simple.</p> <ol> <li>Pay using tqdm's GitHub Sponsors. You can type in a custom amount to order more than one item.</li> <li>Send us your address &amp; any item specifics (colour/size) using the form below so we can send you your merch.</li> </ol> <p>Info</p> <p>We aim to email you a postal tracking number (from <code>devs@tqdm.ml</code>) within 2 working days. Items take 5-25 days to arrive depending on where in the world you are.</p> Click here if the form isn't loading."},{"location":"ports/","title":"Ports to Other Languages","text":"<p>Here is a non-exhaustive list of <code>tqdm</code> ports in various languages, with a partial mention if official and/or in development stage:</p> Language Source Python <code>tqdm/tqdm</code> <code>Official</code> C++ <code>tqdm/tqdm.cpp</code> <code>Official</code> <code>Pre-Alpha</code> .NET <code>damageboy/yaap</code> C++ <code>aminnj/cpptqdm</code> C++ <code>sizmailov/tqdm-cxx</code> D <code>ShigekiKarita/snck</code> Elixir <code>antipax/tqdm_elixir</code> Go <code>kinsey40/tqdm</code> Go <code>sbwhitepack/tqdm</code> Julia <code>cloud-oak/Tqdm.jl</code> Node.js <code>jhedin/ntqdm</code> Perl <code>perlancar/perl-tqdm</code> Ruby <code>powerpak/tqdm-ruby</code> Ruby <code>rscarvalho/tqdm-ruby</code>"},{"location":"releases/","title":"tqdm/tqdm Releases","text":""},{"location":"releases/#v4651-2023-08-08","title":"v4.65.1 (2023-08-08)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 migrate <code>setup.{cfg,py}</code> =&gt; <code>pyproject.toml</code> (#1490)<ul> <li>fix <code>asv</code> benchmarks</li> <li>update docs</li> </ul> </li> <li>\ud83e\uddef fix snap build (#1490)</li> <li>\ud83e\uddef fix &amp; update tests (#1490)<ul> <li>fix flaky notebook tests</li> <li>bump <code>pre-commit</code></li> <li>bump workflow actions</li> </ul> </li> </ul>"},{"location":"releases/#v4650-2023-03-03","title":"v4.65.0 (2023-03-03)","text":"<p>whl|asc</p> <ul> <li>\u26a0\ufe0f add Python 3.11 and drop Python 3.6 support (#1439, #1419, #502 &lt;- #720, #620)</li> <li>\ud83e\uddf9 misc code &amp; docs tidy</li> <li>\ud83e\uddef fix &amp; update CI workflows &amp; tests</li> </ul>"},{"location":"releases/#v4641-2022-09-03","title":"v4.64.1 (2022-09-03)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 support <code>ipywidgets&gt;=8</code>  (#1366, #1361 &lt;- #1310, #1359, #1360, #1364)<ul> <li>fix jupyter lab display</li> <li>update notebook tests</li> </ul> </li> </ul>"},{"location":"releases/#v4640-2022-04-04","title":"v4.64.0 (2022-04-04)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>contrib.slack</code> (#1313)</li> </ul>"},{"location":"releases/#v4632-2022-04-04","title":"v4.63.2 (2022-04-04)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 <code>rich</code>: expose <code>options</code> kwargs (#1282)</li> <li>\ud83d\udd28 <code>autonotebook</code>: re-enable VSCode (#1309)</li> <li>\ud83d\udcd8 misc docs typos (#1301, #1299)</li> <li>\ud83d\udd28 update dev dependencies (#1311)</li> </ul>"},{"location":"releases/#v4631-2022-03-23","title":"v4.63.1 (2022-03-23)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix stderr/stdout missing <code>flush()</code> (#1248 &lt;- #1177)</li> <li>\u26a1 misc speed improvements/optimisations</li> </ul>"},{"location":"releases/#v4630-2022-02-28","title":"v4.63.0 (2022-02-28)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>__reversed__()</code></li> <li>\ud83c\udf89 add efficient <code>__contains__()</code></li> <li>\u26a1 improve CLI startup time (replace <code>pkg_resources</code> =&gt; <code>importlib</code>)</li> <li>\u26a0\ufe0f <code>tqdm.autonotebook</code> warning &amp; <code>std</code> fallback on missing <code>ipywidgets</code> (#1218 &lt;- #1082, #1217)</li> <li>\u26a0\ufe0f warn on positional CLI arguments</li> <li>\ud83d\udee0 misc build/test framework updates<ul> <li>enable <code>py3.10</code> tests</li> <li>add <code>conda</code> dependencies</li> <li>update pre-commit hooks</li> <li>fix <code>pytest</code> config (<code>nbval</code>, <code>asyncio</code>)</li> <li>fix dependencies &amp; tests</li> <li>fix site deployment</li> </ul> </li> </ul>"},{"location":"releases/#v4623-2021-09-20","title":"v4.62.3 (2021-09-20)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix minor typo (#1246)</li> <li>\ud83e\uddef minor example fix (#1246)</li> <li>\u2692 misc tidying &amp; refactoring</li> <li>\ud83d\udee0 misc build/dev framework updates<ul> <li>update dependencies</li> <li>update linters</li> <li>update docs deployment branches</li> </ul> </li> <li>\ud83d\udee0 misc test/ci updates<ul> <li>test forks</li> <li>tidy OS &amp; Python version tests</li> <li>bump primary python version 3.7 =&gt; 3.8</li> <li>beta py3.10 testing</li> <li>fix py2.7 tests</li> <li>better timeout handling</li> </ul> </li> </ul>"},{"location":"releases/#v4622-2021-08-23","title":"v4.62.2 (2021-08-23)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix notebook memory leak (#1216)</li> <li>\ud83e\uddef fix <code>contrib.concurrent</code> with generators (#1233 &lt;- #1231)</li> </ul>"},{"location":"releases/#v4621-2021-08-14","title":"v4.62.1 (2021-08-14)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udee0 <code>contrib.logging</code>: inherit existing handler output stream (#1191)</li> <li>\ud83e\uddef fix <code>PermissionError</code> by using <code>weakref</code> in <code>DisableOnWriteError</code> (#1207)</li> <li>\ud83e\uddef fix <code>contrib.telegram</code> creation rate limit handling (#1223, #1221 &lt;- #1220, #1076)</li> <li>\ud83e\uddef tests: fix py27 <code>keras</code> dependencies (#1222)</li> <li>\ud83e\uddf9 misc tidy: use relative imports (#1222)</li> <li>\ud83d\udcd8 minor documentation updates (#1222)</li> </ul>"},{"location":"releases/#v4620-2021-07-30","title":"v4.62.0 (2021-07-30)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 <code>asyncio.gather</code> API consistency with stdlib (#1212)</li> <li>\ud83e\uddef fix shutdown exception (#1209 &lt;- #1198)</li> <li>\ud83d\udee0 misc build framework updates (#1209)</li> <li>\u26a1 add GH Sponsors &amp; merch links</li> </ul>"},{"location":"releases/#v4612-2021-07-16","title":"v4.61.2 (2021-07-16)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 install <code>colorama</code> on Windows (#1139, #454)</li> <li>\ud83c\udf89 add telegram support for <code>leave=False</code> (#1189)</li> <li>\ud83c\udf89 support <code>pandas==1.3.0</code> (#1199)</li> <li>\ud83e\uddef fix <code>keras</code> potential <code>AttributeError</code> (#1184 &lt;- #1183)</li> <li>\ud83e\uddef fix py3.10 <code>asyncio</code> tests (#1176)</li> <li>\ud83d\udd28 flush <code>stdout</code>/<code>err</code> before first render (#1177)</li> <li>\ud83d\udee0 misc minor build &amp; test framework updates (#1180)</li> </ul>"},{"location":"releases/#v4611-2021-06-12","title":"v4.61.1 (2021-06-12)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>utils._screen_shape_linux()</code> sometimes raising <code>ValueError</code> (#1174)</li> <li>\ud83d\udee0 minor build/CI framework updates (#1175)</li> <li>\ud83d\udcd8 minor documentation updates<ul> <li>fix typo (#1178)</li> <li>link to merch! :billed_cap: :shirt:</li> </ul> </li> </ul>"},{"location":"releases/#v4610-2021-05-24","title":"v4.61.0 (2021-05-24)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 <code>keras</code> support for <code>initial_epoch</code> (#1150 &lt;- #1138)</li> <li>\ud83d\udcd8 misc documentation updates<ul> <li>update &amp; shorten URLs (#1163)</li> <li>fix typos (#1162)</li> </ul> </li> <li>\ud83e\uddef fix &amp; update tests (#1163)</li> <li>\ud83d\udee0 minor framework updates (#1163)</li> </ul>"},{"location":"releases/#v4600-2021-04-06","title":"v4.60.0 (2021-04-06)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udee0 add <code>contrib.logging</code> helpers for redirecting to <code>tqdm.write()</code> (#1155 &lt;- #786)</li> <li>\ud83c\udf89 support <code>delay</code> in <code>notebook</code> (#1142)</li> <li>\ud83e\uddef fix <code>contrib.tmap</code>, <code>tzip</code> not using <code>tqdm_class</code> (#1148)</li> <li>\ud83d\udd0d add <code>notebook</code> tests (#1143)</li> <li>\ud83e\uddef updates &amp; misc minor fixes for documentation</li> </ul>"},{"location":"releases/#v4590-2021-03-05","title":"v4.59.0 (2021-03-05)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>tqdm.dask.TqdmCallback</code> (#1079, #279 &lt;- #278)</li> <li>\ud83c\udf89 add <code>asyncio.gather()</code> (#1136)</li> <li>\ud83c\udf89 add basic support for <code>length_hint</code> (#1068)</li> <li>\ud83d\udd0d add &amp; update tests</li> <li>\ud83d\udcd8 misc documentation updates (#1132)<ul> <li>update contributing guide</li> <li>update URLs</li> <li>bash completion: add missing <code>--delay</code></li> </ul> </li> <li>\ud83e\uddf9 misc code tidy<ul> <li>add <code>[notebook]</code> extra (#1135)</li> </ul> </li> </ul>"},{"location":"releases/#v4580-2021-02-25","title":"v4.58.0 (2021-02-25)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add start <code>delay</code> in seconds (#836 &lt;- #1069, #704)</li> <li>\ud83d\udd0d add tests</li> <li>\ud83e\uddf9 misc code tidy (#1130)</li> <li>\ud83d\udcd8 misc documentation updates</li> </ul>"},{"location":"releases/#v4570-2021-02-18","title":"v4.57.0 (2021-02-18)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add line buffering for <code>DummyTqdmFile</code> (#960)</li> <li>\ud83e\uddef fix &amp; update demo notebook (#1127)</li> <li>\ud83e\uddef fix py3 urllib examples (#1127)</li> <li>\u26a0\ufe0f suppress deprecated <code>pandas</code> warnings (#824, #1094)</li> <li>\ud83d\udee0 misc framework updates</li> <li>\ud83d\udd0d misc tests updates</li> <li>\ud83e\uddf9 misc code tidy</li> </ul>"},{"location":"releases/#v4562-2021-02-10","title":"v4.56.2 (2021-02-10)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix attribute errors when disabled (#1126)<ul> <li><code>reset()</code> (#1125)</li> <li><code>unpause()</code></li> </ul> </li> <li>\ud83d\udd0d add tests</li> </ul>"},{"location":"releases/#v4561-2021-02-09","title":"v4.56.1 (2021-02-09)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>repr()</code> &amp; <code>format_dict</code> when disabled (#1113 &lt;- #624)</li> <li>\ud83d\udd28 rename <code>__repr__()</code> =&gt; <code>__str__()</code></li> <li>\ud83d\udcd8 minor documentation updates\ufeff (#1113)<ul> <li>fix Binder demo notebook (#1119)</li> <li>remove explicit Dockerfile</li> <li>move some images to external repo</li> </ul> </li> <li>\ud83d\udd0d add &amp; update tests</li> </ul>"},{"location":"releases/#v4560-2021-01-11","title":"v4.56.0 (2021-01-11)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>tqdm.tk</code> (#1006)</li> <li>\ud83c\udf89 add <code>tqdm.rich</code></li> <li>\ud83c\udf89 minor formatting improvements for <code>tqdm.gui</code></li> <li>\ud83e\uddef fix <code>display()</code> inheritance/override</li> <li>\ud83d\udd0d add tests</li> <li>\ud83d\udcd8 add documentation</li> </ul>"},{"location":"releases/#v4552-2021-01-09","title":"v4.55.2 (2021-01-09)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd0d update tests (#1108)<ul> <li>make pre-commit <code>pytest</code> quicker</li> <li>switch pre-commit from <code>make</code> to <code>python</code></li> <li>add and update (auto) formatters &amp; CI (#1108, #1093)</li> </ul> </li> <li>\ud83d\udcd8 update contributing guidelines (#1108)<ul> <li>fix formatting</li> <li>test dependencies (#1109)</li> </ul> </li> <li>\ud83d\udd28 update <code>.gitignore</code></li> <li>\ud83e\uddef fix (auto &amp; manual) formatting</li> <li>\ud83e\uddef fix minor detected bugs</li> <li>\ud83d\udee0 misc build/CI framework upgrades</li> </ul>"},{"location":"releases/#v4551-2021-01-02","title":"v4.55.1 (2021-01-02)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>(Rolling|Expanding).progress_apply()</code> on <code>pandas==1.2.0</code> (#1106)</li> <li>\ud83d\udcd8 minor documentation updates</li> </ul>"},{"location":"releases/#v4550-2020-12-25","title":"v4.55.0 (2020-12-25)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix ASCII notebook export (#937, #1035, #1098)</li> <li>\ud83e\uddef fix notebook gui-mode extra spaces (#433, #479, #550, #935)</li> <li>\ud83c\udf89 better ETA for early iterations (#1101)</li> <li>\ud83c\udf89 better ETA for wildly varying iteration rates (#1102)</li> <li>\ud83d\udd28 update submodule inheritance<ul> <li><code>tqdm.gui</code></li> <li><code>tqdm.notebook</code></li> <li><code>tqdm.contrib.telegram</code></li> <li><code>tqdm.contrib.discord</code></li> </ul> </li> <li>\ud83d\udcd8 documentation updates</li> <li>\u26a1 misc code optimisations</li> <li>\ud83d\udd0d add tests</li> <li>\ud83d\udee0 framework updates<ul> <li>build</li> <li>CI &amp; test</li> </ul> </li> <li>\ud83e\uddf9 misc code linting/formatting</li> </ul>"},{"location":"releases/#v4541-2020-12-05","title":"v4.54.1 (2020-12-05)","text":"<p>whl|asc</p> <ul> <li>\u26a0\ufe0f drop <code>py3.4</code> (no longer tested) (#1091)</li> <li>\ud83d\udee0 misc CI updates (#1091)<ul> <li>update <code>snap</code> build &amp; deploy method</li> <li>bot releases</li> </ul> </li> </ul>"},{"location":"releases/#v4540-2020-11-27","title":"v4.54.0 (2020-11-27)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 get rid of <code>get_new</code> (#1085 &lt;- #1084, #509)</li> <li>\u26a1 minor CI framework optimisations</li> </ul>"},{"location":"releases/#v4530-2020-11-21","title":"v4.53.0 (2020-11-21)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 provide <code>get_new()</code> helper for mixed subclasses in nested mode (#509)</li> <li>\ud83e\uddef fix nested <code>asyncio</code> (#1074)<ul> <li>document async <code>break</code> hazard</li> </ul> </li> <li>\ud83d\udd0d add tests</li> <li>\u26a0\ufe0f drop py2.6/3.2/3.3 and distutils (no longer tested)<ul> <li>drop py2.6 (#502 &lt;- #620, #127)</li> <li>drop <code>distutils</code> in favour of <code>setuptools</code>/<code>setup.cfg</code> (#723, #721)</li> </ul> </li> <li>\ud83d\udee0 CI framework overhaul<ul> <li>drop appveyor (Windows already tested by GHA)</li> <li>skip <code>devel</code> PRs</li> <li>automate linting comments on failure</li> </ul> </li> <li>\ud83d\udd28 use <code>setuptools_scm</code> (#722)<ul> <li>fix &amp; update tests</li> <li>fix &amp; upgrade snap build</li> <li>update CONTRIBUTING docs</li> </ul> </li> </ul>"},{"location":"releases/#v4520-2020-11-16","title":"v4.52.0 (2020-11-16)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 allow delaying <code>display()</code> to a different notebook cell (#1059 &lt;- #909, #954)<ul> <li>add <code>notebook</code> argument <code>display=True</code> (use <code>display=False</code> with <code>display(tqdm_object.container)</code>)</li> <li>add <code>keras.TqdmCallback</code> support for initialiser arguments (use <code>display=False</code> with <code>tqdm_callback_object.display()</code>) (#1059 &lt;- #1065)</li> <li>add documentation</li> </ul> </li> <li>\ud83d\udee0 add CI on windows (#507)</li> <li>\ud83d\udee0 enable CI on OSX</li> <li>\ud83d\udee0 migrate CI Travis =&gt; GHA<ul> <li>add tests for MacOS &amp; Windows</li> <li>add tests for py3.9 (#1073)</li> <li>update documentation</li> </ul> </li> <li>\ud83d\udd28 minify docker build</li> <li>\ud83d\udd0d update tests</li> <li>\ud83e\uddf9 misc tidy</li> </ul>"},{"location":"releases/#v4510-2020-10-25","title":"v4.51.0 (2020-10-25)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>{eta}</code> datetime <code>bar_format</code> argument (#1055 &lt;- #1051)<ul> <li>e.g. <code>bar_format='{l_bar}{bar}| {n_fmt}/{total_fmt} [{rate_fmt} ETA:{eta:%y-%m-%d %H:%M}{postfix}]'</code></li> </ul> </li> <li>\ud83e\uddef fix py3 CLI <code>--update</code> &amp; <code>--update_to</code></li> <li>\ud83d\udd28 replace <code>nosetests</code> with <code>pytest</code> (#1052, #1045)</li> <li>\ud83d\udd0d add &amp; update tests</li> </ul>"},{"location":"releases/#v4502-2020-10-08","title":"v4.50.2 (2020-10-08)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fixed <code>platform.system()</code> causing <code>fork()</code> warnings (#691)</li> <li>\ud83e\uddef fixed <code>contrib.concurrent.process_map</code> pickling error with <code>threading.RLock</code> (#920)</li> <li>\ud83d\udcd8 updated documentation &amp; examples</li> <li>\ud83d\udee0 updated CI framework</li> <li>\ud83d\udd0d updated tests</li> <li>\ud83e\uddf9 misc code tidy</li> </ul>"},{"location":"releases/#v4501-2020-10-07","title":"v4.50.1 (2020-10-07)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix multiprocessing lock creation leak (#982, #936, #759)<ul> <li>fixes #617 which introduced this bug (v4.29.0, released 2019-01-06, undiagnosed until now) where multiple threads could concurrently create and append process locks to a global list, then try to release them without first acquiring :imp:</li> </ul> </li> <li>\u26a1 major test overhaul: fix, update, and speed up</li> <li>\ud83d\udee0 misc CI framework updates</li> <li>\ud83e\uddf9 code linting</li> <li>\ud83e\uddf9 minor documentation tidy</li> </ul>"},{"location":"releases/#v4500-2020-09-28","title":"v4.50.0 (2020-09-28)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add bar <code>colour</code> option (#1040 &lt;- #450)<ul> <li>for <code>notebook</code> as well as <code>std</code>/CLI</li> <li>plain text as well as hex (e.g. 'green' or '#00ff00')</li> </ul> </li> <li>\ud83c\udf89 <code>notebook</code> improvements (#1032 &lt;- #1031)<ul> <li>split bar description into separate widget</li> <li>improve <code>reset()</code> (handle width and colour)</li> </ul> </li> <li>\ud83e\uddef fix exceptions when <code>file</code> is closed (#1041, #1036 &lt;- #1033)</li> <li>\ud83d\udd0d add &amp; update tests</li> <li>\ud83d\udcd8 minor documentation updates</li> <li>\ud83d\udd28 move and configure issue/pr templates</li> </ul>"},{"location":"releases/#v4490-2020-09-12","title":"v4.49.0 (2020-09-12)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 CLI: add <code>--tee</code> (#1014 &lt;- #1013)</li> <li>\ud83c\udf89 CLI: add <code>--update</code> and <code>--update_to</code> (#996 &lt;- #975)</li> <li>\ud83c\udf89 CLI: add <code>--null</code> (#996)</li> <li>\ud83d\udd28 CLI: accept <code>-</code> instead of <code>_</code> in options (e.g. <code>--update-to</code>)</li> <li>\ud83d\udd28 make <code>update()</code> return <code>True</code> on <code>display</code> to ease efficient use of custom callbacks (#845)</li> <li>\ud83e\uddef fix <code>py&gt;=3</code> CLI <code>--delim</code> encoding error</li> <li>\ud83e\uddef fix <code>py&gt;=3.5</code> version detection in <code>tqdm.auto</code> (#1029 &lt;- #1028)</li> <li>\ud83e\uddef fix final ETA when using <code>initial</code> (#1021 &lt;- #689)</li> <li>\ud83d\udcd8 update documentation<ul> <li>add &amp; update custom callback examples</li> <li>improve help formatting of boolean CLI options</li> </ul> </li> <li>\ud83d\udd0d add &amp; update tests</li> </ul>"},{"location":"releases/#v4482-2020-08-03","title":"v4.48.2 (2020-08-03)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>notebook</code> formatting</li> </ul>"},{"location":"releases/#v4481-2020-08-03","title":"v4.48.1 (2020-08-03)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix ANSI escape codes breaking <code>tqdm.write</code> (#692, #777)</li> <li>\ud83e\uddef fix long-lived strongref (#1007, https://bugs.python.org/issue39093)</li> <li>\ud83e\uddef fix cli <code>--version</code> crash on missing <code>git/refs/heads</code> (#635)</li> <li>\ud83e\uddef fix <code>contrib.tenumerate</code> ignoring <code>total</code> (#1017)</li> <li>\ud83e\uddef fix potential deep =&gt; shallow <code>kwargs</code> copy issues</li> <li>\ud83c\udf89 improve <code>notebook</code> display for unknown <code>total</code> (#1015)</li> <li>\ud83d\udd28 make <code>asyncio</code> inherit from <code>std</code> rather than <code>auto</code></li> <li>\ud83d\udd28 make <code>auto</code> multi-inherit from <code>autonotebook</code>, <code>asyncio</code> on Python3.5+</li> <li>\ud83d\udcd8 misc documentation &amp; examples updates<ul> <li>mention <code>docker-compose</code> requirements (#771)</li> </ul> </li> <li>\ud83e\uddf9 misc linting &amp; tidy</li> <li>\ud83d\udee0 misc minor testing framework updates</li> </ul>"},{"location":"releases/#v4480-2020-07-16","title":"v4.48.0 (2020-07-16)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>tqdm.asyncio</code> (#1004, #772, #91 &lt;- #65)<ul> <li>supports async iterables (<code>async for row in tqdm(iterable)</code>)</li> <li>supports iterables</li> <li>supports <code>coroutine.send</code> (<code>tqdm(coroutine).send</code>)</li> <li>add <code>as_completed</code> wrapper (<code>for f in tqdm.as_completed(fs)</code>)</li> </ul> </li> <li>\ud83d\udee0 reduce <code>contrib.discord</code> logging verbosity</li> <li>\ud83e\uddef fix potential <code>pandas()</code> modifying <code>**kwargs</code> bug</li> <li>\ud83d\udcd8 update documentation<ul> <li>add missing inline docstrings</li> <li>update contributing notes</li> <li>update readme</li> <li>add to <code>examples/</code> folder<ul> <li>async_coroutines</li> <li>coroutine_pipe</li> </ul> </li> <li>standardise variable naming</li> </ul> </li> <li>\ud83d\udd0d add tests<ul> <li>add benchmark tests against popular alternative libraries</li> <li>test new functionality</li> <li>more thorough <code>miniters</code> test (#1003)</li> </ul> </li> <li>\ud83d\udee0 misc framework updates<ul> <li>tidy changelog helper</li> <li>add helper bots<ul> <li>comment-bot <code>/tag</code></li> <li>post-release-bot<ul> <li>wiki updater</li> <li>website updater</li> </ul> </li> <li>benchmark regressions<ul> <li>full/thorough test on schedule &amp; release</li> <li>quick test on PR</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"releases/#v4470-2020-06-28","title":"v4.47.0 (2020-06-28)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>contrib.discord</code> (similar to <code>contrib.telegram</code>) (#976)</li> <li>\ud83c\udf89 add <code>contrib.bells</code> to auto-enable all extras</li> <li>\ud83c\udf89 add <code>contrib.utils_worker</code> for common slow tasks (e.g. web I/O)<ul> <li>fix lazy large memory usage &amp; discard unsent messages (unprocessed tasks)</li> </ul> </li> <li>\ud83e\uddef fix slow notebook imports (#955 &lt;- #709)</li> <li>\ud83e\uddef fix <code>gui</code> <code>TypeError</code> on unknown <code>len()</code> (#971)</li> <li>\ud83d\udcd8 misc documentation/error message updates<ul> <li>more succinct ImportError on missing <code>ipywidgets</code> (#872)</li> <li>fix broken/deprecated link (#981)</li> <li>add inline usage for <code>contrib.discord</code> and <code>contrib.telegram</code></li> </ul> </li> <li>\ud83d\udee0 misc framework updates<ul> <li>add official <code>py3.8</code> support (#986)</li> <li>fix <code>snap</code> builds</li> </ul> </li> </ul> <p></p> <p></p>"},{"location":"releases/#v4461-2020-06-03","title":"v4.46.1 (2020-06-03)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix missing <code>sys.setcheckinterval</code> in py3.9 (#978)</li> <li>\ud83e\uddef fix <code>keras.TqdmCallback</code> compatibility with <code>tensorflow==2.2.0</code> (#979)</li> <li>\ud83d\udcd8 update documentation<ul> <li>correct <code>contrib.concurrent</code> correct <code>max_workers</code> (#977)</li> <li>drop prominent mention of <code>xrange</code> (#965)</li> </ul> </li> <li>\ud83e\uddf9 minor linting</li> </ul>"},{"location":"releases/#v4460-2020-05-03","title":"v4.46.0 (2020-05-03)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>contrib.telegram</code> #949 &lt;- #948</li> <li>\ud83c\udf89 add <code>bash</code> tab completion and <code>--comppath</code> #946, #947 &lt;- #858</li> <li>\ud83e\uddef fix exception safety in <code>external_write_mode</code> #940</li> <li>\ud83d\udcd8 add <code>requests</code> examples (#242)</li> <li>\ud83d\udcd8 update documentation</li> </ul>"},{"location":"releases/#v4450-2020-04-02","title":"v4.45.0 (2020-04-02)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 propagate and <code>close()</code> on exceptions (#926 &lt;- #548)</li> <li>\ud83e\uddef fix nested <code>clear()</code></li> <li>\u2692 rework nested <code>close()</code> (#930 &lt;- #924 &lt;- #918, #677)<ul> <li>reduces screen flicker/blank space at the cost of ordering</li> </ul> </li> <li>\ud83d\udcd8 update all documentation &amp; demos</li> <li>\ud83d\udd0d add and update tests</li> <li>\ud83d\udee0 dev framework: add pre-commit helper</li> </ul>"},{"location":"releases/#v4441-2020-03-29","title":"v4.44.1 (2020-03-29)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>_utils</code> <code>ImportError</code> =&gt; <code>DeprecationWarning</code> (#928 &lt;- #927)</li> </ul>"},{"location":"releases/#v4440-2020-03-28","title":"v4.44.0 (2020-03-28)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add automatic <code>nrows</code> and expose for manual override (#918 -&gt; #924)</li> <li>\u26a0\ufe0f expose and warn about small <code>chunksize</code> in <code>tqdm.contrib.concurrent.process_map</code> (#912)</li> <li>\ud83e\uddef fix py2 file stream comparison (#727 -&gt; #730)</li> <li>\u26a0\ufe0f deprecate <code>utils._environ_cols_wrapper</code></li> <li>\ud83d\udd0d add and update tests</li> <li>\ud83d\udcd8 add documentation</li> </ul>"},{"location":"releases/#v4430-2020-02-19","title":"v4.43.0 (2020-02-19)","text":"<p>whl</p> <ul> <li>\ud83e\uddef fix <code>notebook</code> exceptions (#669 &lt;- #650)<ul> <li><code>set_description()</code> when <code>disable=True</code></li> </ul> </li> <li>\ud83d\udd28 <code>contrib.concurrent</code>: avoid unnecessary <code>len(iterable)</code> (#893)</li> <li>\ud83d\udcd8 update documentation<ul> <li>clarify etymology (#895)</li> <li>fix minor typo (#890)</li> <li>update contributors and years</li> </ul> </li> <li>\ud83d\udd0d update tests</li> <li>\ud83e\uddef fix CI tests for PRs</li> </ul>"},{"location":"releases/#v4421-2020-02-03","title":"v4.42.1 (2020-02-03)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 support <code>pandas==1.0.0</code> (#780, #555)</li> <li>\ud83d\udcd8 minor metadata updates</li> <li>\ud83d\udee0 minor CI test update</li> </ul>"},{"location":"releases/#v4420-2020-01-25","title":"v4.42.0 (2020-01-25)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 <code>notebook</code>: update <code>disable=None</code> behaviour (#880)</li> <li>\ud83c\udf89 <code>tqdm.keras</code>: support <code>tensorflow.keras</code> as well as <code>keras</code> (#885)</li> <li>\ud83c\udf89 add <code>contrib</code> (#882)<ul> <li><code>tenumerate</code> (#840 &lt;- #480, #402)</li> <li><code>tzip</code> &lt;= <code>zip</code></li> <li><code>tmap</code> &lt;= <code>map</code></li> <li>add <code>concurrent</code> module<ul> <li><code>thread_map</code> &lt;= <code>concurrent.futures.ThreadPoolExecutor.map</code></li> <li><code>process_map</code> &lt;= <code>concurrent.futures.ProcessPoolExecutor.map</code></li> </ul> </li> <li>add <code>itertools</code> module (#225) stub<ul> <li><code>product</code></li> </ul> </li> </ul> </li> <li>\ud83d\udd0d add &amp; update tests</li> <li>\ud83d\udcd8 add &amp; update documentation<ul> <li>README</li> <li>examples/</li> </ul> </li> <li>\ud83d\udee0 update CI framework</li> </ul>"},{"location":"releases/#v4411-2020-01-05","title":"v4.41.1 (2020-01-05)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef <code>keras</code> module tidy and fixes<ul> <li>fix <code>batch_size=None</code> (#869)</li> <li>add missing <code>pop('size')</code></li> </ul> </li> </ul>"},{"location":"releases/#v4410-2019-12-20","title":"v4.41.0 (2019-12-20)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 trim on <code>ncols</code> overflow with ANSI handling (#850, #716 &lt;- #690)</li> <li>\ud83c\udf89 add <code>notebook.reset()</code> (#864)</li> <li>\ud83c\udf89 add <code>keras.TqdmCallback</code> (#867 &lt;- #835)</li> <li>\ud83d\udcd8 documentation updates<ul> <li>document newly added features (above)</li> <li>notebook <code>ncols</code> percentage/pixels (#276)</li> </ul> </li> <li>\ud83d\udd0d test updates<ul> <li>test newly added features (above)</li> <li>add CI for <code>win</code> and <code>osx</code> (#841)</li> <li><code>py2</code> threading</li> </ul> </li> </ul>"},{"location":"releases/#v4402-2019-12-11","title":"v4.40.2 (2019-12-11)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>pandas</code> unhashable func (#862 -&gt; #863)<ul> <li>add tests</li> </ul> </li> </ul>"},{"location":"releases/#v4401-2019-12-11","title":"v4.40.1 (2019-12-11)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix floating point imprecision raising errors (#859)</li> <li>\ud83e\uddef fix auto gh releases (travis-ci/dpl#914)</li> <li>\ud83d\udcd8 update CONTRIBUTING (#84 (comment))</li> </ul>"},{"location":"releases/#v4400-2019-12-01","title":"v4.40.0 (2019-12-01)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 officially support <code>float</code> for <code>n</code> and <code>total</code> (#802)<ul> <li><code>notebook</code>: use <code>FloatProgress</code> &lt;= <code>IntProgress</code> (#471, #456)</li> <li>allow imprecision (<code>n &lt;= total + epsilon</code>) (#849)</li> </ul> </li> <li>\ud83e\uddef fix unicode bar format arguments (#803 -&gt; #851)</li> <li>\ud83c\udf89 add <code>contrib</code> submodule (#815)</li> <li>\ud83c\udf89 add <code>wrapattr</code>, <code>utils.CallbackIOWrapper</code>, <code>contrib.DummyTqdmFile</code> (#84 -&gt; #844)</li> <li>\ud83d\udd0d update tests</li> <li>\ud83d\udcd8 update documentation</li> <li>\ud83e\uddf9 tidy automatic <code>snap</code> deployments</li> <li>\ud83d\udcd8 minor doc update (#854)</li> </ul>"},{"location":"releases/#v4390-2019-11-22","title":"v4.39.0 (2019-11-22)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>pandas</code> builtin operations check (#843 &lt;- #697)</li> <li>\ud83d\udd28 avoid unnecessary <code>dedent</code> (#837)</li> <li>\ud83e\uddf9 remove unneeded bar logic</li> <li>\ud83e\uddf9 misc code tidy</li> <li>\ud83d\udcd8 update documentation<ul> <li>document default argument overriding (#370)</li> <li>add missing <code>isatty()</code> (#713)</li> <li>update badges</li> <li>add code of conduct</li> </ul> </li> <li>\ud83d\udee0 update framework<ul> <li>clean CI stages</li> <li>update CI default <code>py3.6</code> =&gt; <code>py3.7</code></li> <li>automate snap releases (#686 &lt;- #685)</li> </ul> </li> </ul>"},{"location":"releases/#v4380-2019-11-09","title":"v4.38.0 (2019-11-09)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 support <code>lock_args</code> for e.g. non-blocking intermediate writes (#838 -&gt; #839)<ul> <li>use <code>self.refresh()</code> in more places</li> <li>add and update performance tests</li> <li>support args for <code>TqdmDefaultWriteLock.acquire()</code></li> </ul> </li> <li>\ud83e\uddef fix colorama on win (#678, #764)</li> <li>\ud83d\udee0 framework updates<ul> <li>CI cleanup<ul> <li>move to stages (check/test/deploy)</li> <li>auto deploy notes</li> <li>deploy only on parent repo</li> <li>separate docker deploy</li> </ul> </li> <li>update documentation sync/generation</li> </ul> </li> <li>\ud83d\udcd8 update examples</li> <li>\ud83d\udcd8 update documentation</li> <li>\ud83d\udd0d add and update tests</li> <li>\ud83e\uddf9 misc tidy and linting</li> </ul>"},{"location":"releases/#v4370-2019-10-31","title":"v4.37.0 (2019-10-31)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef potential future pandas fix (#824)</li> <li>\ud83c\udf89 better unicode widechar support (#803 -&gt; #410, #805)</li> <li>\ud83e\uddef fix example/tqdm_wget unknown total (#826)</li> <li>\ud83c\udf89 add <code>stacklevel=2</code> to warnings (#821)</li> <li>\ud83d\udee0 misc framework updates<ul> <li>snapcraft version fix</li> <li>update issue/pr templates (#830)</li> <li>update unit tests</li> </ul> </li> <li>\ud83d\udcd8 misc documentation updates<ul> <li>update parallel (multiprocessing, ThreadPoolExecutor) example (#407)</li> <li>add slides, video images</li> <li>add CII Best Practices badge</li> <li>add repology badge</li> <li>update badge icons</li> </ul> </li> </ul>"},{"location":"releases/#v4361-2019-09-20","title":"v4.36.1 (2019-09-20)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix CLI entrypoint</li> </ul>"},{"location":"releases/#v4360-2019-09-17","title":"v4.36.0 (2019-09-17)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 expose more custom format params</li> <li>\ud83e\uddef potential thread safety fix (#548)</li> <li>\u2692 update submodule architecture (#198 -&gt; #800)<ul> <li>backward-compatibility</li> <li>expose <code>utils</code></li> <li>rename <code>main</code> -&gt; <code>cli</code></li> <li>add/fix tests</li> <li>fix minor cached var optimisation</li> <li><code>gui</code> partial upgrade (#790)</li> <li><code>notebook</code> upgrade (#790)<ul> <li>support <code>{bar}</code> in <code>bar_format</code> (#594)</li> <li>inherit methods including <code>set_*(refresh)</code> (#740 -&gt; #741)</li> </ul> </li> <li>ready for <code>contrib</code> releases (#252)</li> </ul> </li> <li>\ud83c\udf89 support custom <code>bar_format</code> with unknown <code>total</code></li> <li>\ud83e\uddef fix <code>tqdm_notebook</code> red block on explicit <code>file=None</code> (#791)</li> <li>\ud83c\udf89 update notebook to fully support custom <code>bar_format</code> (#594, #649)</li> <li>\ud83e\uddf9 misc tidy<ul> <li>warnings</li> <li>linting</li> <li>update submodule contribution guide (#252)</li> <li>parallel <code>(py)make test</code></li> <li>fix Zenodo metadata</li> </ul> </li> <li>\ud83d\udcd8 update documentation<ul> <li><code>pandas</code>, <code>notebook</code>, <code>gui</code> (#245)</li> <li>indentation</li> <li>update multiprocessing and multithreading examples (#796)</li> </ul> </li> </ul>"},{"location":"releases/#v4350-2019-08-24","title":"v4.35.0 (2019-08-24)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>{bar}</code> format specifier (#623 -&gt; #799)<ul> <li><code>[width][type]</code></li> </ul> </li> <li>\ud83d\udcd8 add tests and documentation</li> <li>\u26a1 update performance tests</li> </ul>"},{"location":"releases/#v4340-2019-08-18","title":"v4.34.0 (2019-08-18)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 add <code>leave=None</code> convenience option for <code>leave = position == 0</code></li> <li>\ud83d\udd28 ensure nested completed bars respect <code>leave=True</code> (#230)</li> <li>\ud83d\udd28 ensure nested bars are cleared before being moved up (#795)</li> <li>\ud83c\udf89 support both <code></code> and <code>=</code> syntax for CLI options (#761 -&gt; #774)</li> <li>\ud83d\udcd8 misc documentation updates (#778, #782)</li> <li>\ud83e\uddef fix/update tests</li> <li>\ud83d\udee0 update GitHub docker package deployment</li> </ul>"},{"location":"releases/#v4330-2019-08-08","title":"v4.33.0 (2019-08-08)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>pandas==0.25</code> API change (#780)</li> <li>\ud83d\udcd8 add contributor badges (<code>sourcerer</code>)</li> <li>\ud83e\uddef fix py26 travis CI</li> <li>\ud83e\uddef metadata fixes<ul> <li><code>.zenodo.json</code></li> <li><code>CODEOWNERS</code></li> </ul> </li> <li>\ud83d\udee0 GitHub package registry docker deployment</li> <li>\ud83e\uddf9 minor linting</li> <li>\ud83d\udcd8 documentation updates (#773)</li> </ul>"},{"location":"releases/#v4322-2019-06-18","title":"v4.32.2 (2019-06-18)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix 'Set changed size during iteration' (#481 -&gt; #700, #754)</li> <li>\ud83c\udf89 add <code>tqdm.autonotebook</code> check for <code>$VSCODE_PID</code> (#747 -&gt; #751)</li> <li>\ud83e\uddef fix missing <code>multiprocessing</code> in Jython (#698)</li> <li>\ud83d\udd28 make <code>bool(tqdm(iter))</code> consistent with <code>bool(iter)</code> (#353 -&gt; #694)</li> <li>\ud83d\udd0d add and update unit tests</li> <li>\ud83d\udee0 add and update documentation &amp; framework<ul> <li>update notable contributors list</li> <li>update usage docstrings (#714, #715)</li> <li>add funding</li> <li>add <code>awesome-python</code> badge</li> <li>trove classifier update</li> <li>update demo notebook badges</li> <li>add JOSS DOI</li> <li>add Zenodo metadata</li> <li>move unnecessary root clutter</li> </ul> </li> </ul>"},{"location":"releases/#v4321-2019-05-13","title":"v4.32.1 (2019-05-13)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>notebook</code> with unknown <code>total</code> (#743)</li> </ul>"},{"location":"releases/#v4320-2019-05-13","title":"v4.32.0 (2019-05-13)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 support <code>unit_scale</code> in <code>notebook</code></li> <li>\ud83c\udf89 support negative update (#432, #545)</li> <li>\ud83c\udf89 add <code>reset()</code> function (#547, #545)</li> <li>\ud83c\udf89 add <code>[python setup.py] make run</code></li> <li>\ud83d\udcd8 add and update documentation<ul> <li>example of dynamic usage (#735, #545, #547, #432, #374)</li> <li>note writing issues (#737)</li> <li>update badges</li> <li>add PyData2019 slides link</li> <li>add JOSS paper</li> <li>update manpages</li> <li>add docker install</li> <li>add snapcraft install</li> <li>notebooks: add binder, rename RMOTR =&gt; notebooks.ai (#679)</li> <li>prettify and unify contributors/maintainers/authors</li> </ul> </li> <li>\ud83d\udee0 CI and release framework updates<ul> <li>add snapcraft snaps (#647)</li> <li>add travis auto-deployment (#685)<ul> <li>PyPI releases</li> <li>docker devel/releases</li> </ul> </li> <li>update deployment dev docs</li> <li>fix travis deploy pymake</li> <li>update .gitinore</li> <li>add &amp; update unit tests</li> <li>automate more documentation</li> </ul> </li> </ul>"},{"location":"releases/#v4311-2019-02-10","title":"v4.31.1 (2019-02-10)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>file.encoding==None</code> caused by #598 (#673 -&gt; #676)<ul> <li>add tests</li> </ul> </li> <li>\ud83e\uddf9 tidy code, update authors and tests<ul> <li>add <code>setup.py</code> test to CI</li> </ul> </li> </ul>"},{"location":"releases/#v4310-2019-02-09","title":"v4.31.0 (2019-02-09)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 Write bytes to <code>stdout</code>/<code>stderr</code> in py2 (https://bugs.python.org/issue21363, #589 -&gt; #598)<ul> <li>Add <code>write_bytes</code> parameter for py2/3 default override</li> </ul> </li> <li>\ud83c\udf89 support custom bar characters vias <code>ascii</code> parameter (#223 -&gt; #227)<ul> <li>implement, document and test custom bar spinners</li> </ul> </li> <li>\ud83c\udf89 support custom <code>bar_format</code> with unknown <code>total</code> (#282 -&gt; #284)</li> <li>\ud83e\uddef fix <code>TypeError</code> when <code>unit_scale</code> and unknown <code>total</code></li> <li>\ud83d\udcd8 document <code>format_dict</code></li> <li>\ud83c\udf89 expose <code>elapsed_s</code>, <code>remaining_s</code> to <code>bar_format</code></li> <li>\ud83c\udf89 add <code>unit</code> option to <code>bar_format</code> (#368)</li> <li>\ud83d\udee0 auto <code>README.rst</code> generation framework<ul> <li>add notes in <code>CONTRIBUTING.md</code></li> </ul> </li> <li>\ud83d\udd0d update tests</li> <li>\ud83d\udcd8 update documentation</li> <li>\ud83e\uddf9 misc code tidy</li> </ul>"},{"location":"releases/#v4300-2019-01-26","title":"v4.30.0 (2019-01-26)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 avoid moving when <code>leave=False</code></li> <li>\ud83d\udd0d generalise nested bar tests</li> <li>\ud83c\udf89 add <code>display()</code> helper function</li> <li>\ud83c\udf89 add and expose <code>format_dict</code> (#562, #482, #494, #656)           + allow arbitrary keyword arguments for <code>format_meter</code>           + document <code>format_dict</code> overriding           + add tests for overriding           + related: #660 #587</li> <li>\ud83e\uddf9 add and tidy developer documentation</li> <li>\ud83e\uddef fix py3 CLI pipe decoding error (#663)</li> <li>\ud83d\udee0 framework overhaul (developing, testing, Travis CI updates)</li> <li>\ud83e\uddf9 tidy code and style (flake8)</li> <li>\u2692 <code>setup.py</code> refactor         + <code>setup.py make</code>                 * add support for multi-line commands                 * tidy and efficiency         + replace <code>setup.py</code>'s built-in <code>make</code> -&gt; <code>py-make&gt;=0.1.9</code> (#290)         + add <code>requirements-dev.txt</code> and <code>extras_require[dev]</code></li> <li>\ud83e\uddf9 add, update and tidy tests</li> <li>\ud83d\udcd8 include interactive Jupyter demonstration (#652 -&gt; #659)</li> <li>\ud83d\udcd8 update documentation         + add FAQ about py2 pipes (#359)         + add badges         + update examples         + update authors</li> </ul>"},{"location":"releases/#v4291-2019-01-11","title":"v4.29.1 (2019-01-11)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>classmethod</code> lock bug (#617: #457 -&gt; #658)</li> <li>\ud83d\udd0d add unit test to prevent regression</li> </ul>"},{"location":"releases/#v4290-2019-01-06","title":"v4.29.0 (2019-01-06)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 Avoid global multiprocessing locks (#611 -&gt; #617)</li> <li>\ud83c\udf89 Add support for infinite iterables (#651)</li> <li>\ud83e\uddef Fix missing attr pos when used in multi-threaded environment (#573)</li> <li>\ud83d\udd28 Do not join <code>TMonitor</code> if it is the current thread (#613 -&gt; #641)</li> <li>\ud83c\udf89 Add OpenBSD NIX support (#638)</li> <li>\ud83e\uddef Unit tests, general documentation fixes and tidying (e.g. #642)</li> <li>\ud83d\udee0 CI travis improvements<ul> <li><code>py37-dev</code> -&gt; <code>py37</code> (#622)</li> <li>fix <code>py26</code></li> </ul> </li> </ul>"},{"location":"releases/#v4281-2018-10-21","title":"v4.28.1 (2018-10-21)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>--manpath</code> file not found</li> <li>\ud83c\udf89 expose <code>main():argv</code></li> <li>\ud83d\udd0d add unit tests</li> <li>\ud83e\uddf9 release framework tidy<ul> <li>update .<code>gitattributes</code></li> <li>remove deprecated <code>make</code>/<code>dist</code> options</li> </ul> </li> </ul>"},{"location":"releases/#v4280-2018-10-20","title":"v4.28.0 (2018-10-20)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddf9 remove installation of man pages by default (#460, #628)</li> <li>\ud83c\udf89 CLI:add <code>--manpath</code> option (#629)</li> <li>\ud83e\uddef documentation additions and fixes</li> </ul>"},{"location":"releases/#v4270-2018-10-15","title":"v4.27.0 (2018-10-15)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>str.isnumeric</code> #605</li> <li>\ud83e\uddef fix <code>WeakSet</code> <code>KeyError</code> #548, #553, #596 -&gt; #607</li> <li>\ud83d\udd28 stop <code>tqdm_notebook</code> description truncation #582 -&gt; #599</li> <li>\ud83d\udd28 include <code>unit_scale</code> for <code>rate</code> #608</li> <li>\ud83c\udf89 add <code>auto</code> -&gt; nowarning <code>autonotebook</code></li> <li>\ud83c\udf89 add better postfix numeric formatting #621</li> <li>\u2692 minor refactoring #609 -&gt; #616</li> <li>\ud83d\udcd8 update documentation</li> <li>\ud83d\udd0d add unit tests</li> <li>\ud83e\uddef fix py26 CI</li> </ul>"},{"location":"releases/#v4260-2018-09-11","title":"v4.26.0 (2018-09-11)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>smoothing</code> (#566 -&gt; #601)</li> <li>\ud83d\udd28 <code>pandas</code> updates         + address the <code>FutureWarning</code> in <code>pandas</code>, drop <code>pandas</code> test in py34, add in py37 (#603)         + support <code>pandas</code> <code>axis='index' or 'columns'</code> (#570)</li> <li>\ud83d\udcd8 minor documentation updates (#597, #600, #606)         + developer notes</li> </ul>"},{"location":"releases/#v4250-2018-08-20","title":"v4.25.0 (2018-08-20)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 stop monitor on shutdown (#571, #572)</li> <li>\ud83e\uddef fix <code>find_packages()</code> for submodules (#593)         + properly add <code>autonotebook</code> (#586, 1cf3393)</li> <li>\ud83d\udd28 ignore ANSI escape codes in the bar length calculation (#450, #591 -&gt; #592)</li> <li>\ud83d\udcd8 update documentation (#243)</li> </ul>"},{"location":"releases/#v4240-2018-07-26","title":"v4.24.0 (2018-07-26)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 <code>autonotebook</code> submodule for automatic selection of notebook/CLI bar (#443, #508)         + update/add <code>pandas()</code> example documentation (#474)</li> <li>\ud83d\udd28 <code>NameError:IntProgress</code> changed to a more helpful <code>ImportError</code> (#187, #451, #558)</li> <li>\ud83c\udf89 support <code>bool()</code> cast when <code>disable=True</code> (#574)</li> <li>\ud83e\uddef fix <code>format_sizeof</code> hundreds rounding (#579 -&gt; #581)</li> <li>\ud83d\udcd8 ensure URLs in documentation are secure (<code>https</code>)</li> </ul>"},{"location":"releases/#v4234-2018-05-22","title":"v4.23.4 (2018-05-22)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 Support pandas 0.23.0 <code>core.groupby</code> module layout (#555 -&gt; #554)</li> <li>\ud83c\udf89 Add python_requires to help pip (#557)</li> <li>\ud83d\udee0 minor maintenance updates<ul> <li>CI updates: drop travis py33 due to <code>tox</code> (tox-dev/tox#648)</li> <li>minor code tidy</li> </ul> </li> </ul>"},{"location":"releases/#v4233-2018-05-22","title":"v4.23.3 (2018-05-22)","text":"<p>whl|asc</p> <ul> <li>\u26a0\ufe0f suppress 10 second warning (refix #323)</li> </ul>"},{"location":"releases/#v4232-2018-05-02","title":"v4.23.2 (2018-05-02)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef minor import syntax fix #496</li> <li>\ud83e\uddef re-fix nested overlaps #477</li> <li>\ud83d\udcd8 update documentation and examples</li> <li>\ud83e\uddf9 code tidy and abstraction</li> </ul>"},{"location":"releases/#v4231-2018-04-25","title":"v4.23.1 (2018-04-25)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix <code>AttributeError</code>s (#546)         + <code>pos</code>  on initialisation (#323, #510 -&gt; #544)         + <code>fp</code> on <code>write()</code> (#383)</li> <li>\ud83e\uddef fix py34 CI</li> <li>\ud83d\udcd8 update documentation</li> </ul>"},{"location":"releases/#v4230-2018-04-15","title":"v4.23.0 (2018-04-15)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef Fix <code>disable=True</code> where<code>iterable</code> has no <code>len()</code> and is not <code>None</code>  (#539)</li> <li>\ud83c\udf89 Add <code>ncols</code> to specify <code>tqdm_notebook</code> bar width (#276 -&gt; #292)</li> <li>\ud83d\udd28 allow custom <code>pandas</code> <code>total</code> (#364 -&gt; #535)</li> <li>\ud83c\udf89 Add <code>progress_apply</code> for <code>pandas.(Series|DataFrame).(rolling|expanding)</code> (#530 -&gt; #537)</li> <li>\ud83e\uddf9 unit tests, pep8 tidy</li> <li>\ud83d\udcd8 <code>postfix</code> non-<code>dict</code> documentation note</li> </ul>"},{"location":"releases/#v4220-2018-04-11","title":"v4.22.0 (2018-04-11)","text":"<p>whl|asc</p> <ul> <li>\ud83d\udd28 allow direct non-string assignment to <code>postfix</code> member (lists, dicts, etc) (#382 -&gt; #534)</li> <li>\ud83d\udcd8 documentation updates</li> <li>\ud83d\udd0d unit tests</li> </ul>"},{"location":"releases/#v4210-2018-04-08","title":"v4.21.0 (2018-04-08)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix #532 <code>write()</code> with manual <code>position</code><ul> <li>more robust free position finding</li> </ul> </li> <li>\ud83c\udf89 add <code>TqdmWarning</code> base class</li> <li>\ud83e\uddef fix GUI <code>__del__()</code><ul> <li>add <code>TqdmExperimentalWarning</code></li> </ul> </li> <li>\ud83e\uddef add, tidy &amp; fix unit tests</li> <li>\ud83d\udcd8 documentation<ul> <li>wiki release notes</li> <li>update contributors</li> <li>fix <code>7zx</code> example</li> </ul> </li> </ul>"},{"location":"releases/#v4200-2018-04-03","title":"v4.20.0 (2018-04-03)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddf9 <code>pandas</code> wrapper: remove <code>*args</code> and add better <code>total</code> handling (#244, #299, #322, #366 -&gt; #524)</li> <li>\ud83d\udcd8 document windows unicode know issues (#454)</li> <li>\ud83d\udd28 suppress <code>RuntimeError: Set changed size during iteration</code> -&gt; <code>TqdmSynchronisationWarning</code> (#481)</li> </ul>"},{"location":"releases/#v4199-2018-03-27","title":"v4.19.9 (2018-03-27)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix monitor thread termination and update tests (#527)</li> </ul>"},{"location":"releases/#v4198-2018-03-27","title":"v4.19.8 (2018-03-27)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix monitoring thread issues<ul> <li>avoid uninitialised instance manipulation (#493)</li> <li>fix thread starting <code>RuntimeError</code> (#522 -&gt; #523)</li> </ul> </li> <li>\ud83d\udd28 these release notes (#529)</li> </ul>"},{"location":"releases/#v4196-2018-02-27","title":"v4.19.6 (2018-02-27)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 CLI improvements         + <code>--bytes</code> implies <code>--unit B --unit_scale --unit_divisor 1024</code> (#503)         + allow hyphens in CLI arguments (#511)</li> <li>\ud83e\uddef synchronisation: fix for <code>sem_open</code> on <code>aarch64</code> (#513)</li> <li>\ud83d\udee0 framework update         + CI/tests, year 2018, py37, badges, documentation</li> </ul>"},{"location":"releases/#v4195-2017-12-10","title":"v4.19.5 (2017-12-10)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef multiprocess/lock fixes (#457)</li> <li>\ud83d\udd28 <code>set_description</code> in notebook (#345 -&gt; #475)</li> <li>\ud83e\uddf9 minor tidy (#476)</li> <li>\ud83d\udcd8 documentation updates</li> </ul>"},{"location":"releases/#v4194-2017-10-15","title":"v4.19.4 (2017-10-15)","text":"<p>whl|asc|gz|asc</p> <ul> <li>\ud83e\uddef fix <code>Lock:NotImplementedError</code> on certain systems (#466 -&gt; #468)</li> <li>\ud83d\udd28 use recursive locks (#469 -&gt; #468)         - fix deadlocks</li> <li>\ud83e\uddf9 tidy (#448)</li> <li>\ud83d\udd28 <code>flush()</code> on <code>moveto()</code> (#398 -&gt; #399, #420, #467)</li> <li>\ud83d\udd0d update tests and benchmarks</li> </ul>"},{"location":"releases/#v4192-2017-10-08","title":"v4.19.2 (2017-10-08)","text":"<p>whl|asc|gz|asc</p> <ul> <li>\ud83d\udd28 <code>flush()</code> on <code>refresh()</code> (#459 from #317)</li> <li>\ud83d\udd28 status printer updates (#331)         + use <code>sp()</code> in <code>refresh()</code>         + remove redundant <code>clear():nomove=False</code></li> <li>\ud83d\udcd8 misc minor documentation updates</li> <li>\ud83d\udd0d unit tests</li> </ul>"},{"location":"releases/#v4191-2017-10-03","title":"v4.19.1 (2017-10-03)","text":"<p>whl|asc|gz|asc</p> <ul> <li>\ud83d\udd28 <code>rate_(no)inv(_fmt)</code> (#72, b228bc3)</li> <li>\ud83e\uddf9 <code>__repr__()</code> tidy (#389)</li> <li>\ud83e\uddef fix <code>write()</code> before initialisation <code>AttributeError: _lock</code> (#457)</li> <li>\ud83d\udcd8 <code>man</code> pages</li> <li>\ud83d\udcd8 documentation updates</li> </ul>"},{"location":"releases/#v4180-2017-09-30","title":"v4.18.0 (2017-09-30)","text":"<p>whl|asc|gz|asc</p> <ul> <li>\u26d1 Thread safety! (#285 -&gt; #291 -&gt; #329, #407, #417)</li> <li>\ud83d\udd28 Ease redirection of <code>sys.stdout</code>/<code>stderr</code> (#422)</li> <li>\ud83e\uddef Minor internal stream bugfix (#439)</li> <li>\ud83e\uddef <code>AttributeError</code> fixes (#323, #324, #418)</li> </ul> <p>Related to:</p> <ul> <li>\ud83d\udd28 Misc bugs (#334)</li> <li>\ud83d\udd28 <code>concurrent.futures</code> (#97)</li> <li>\ud83d\udd28 Multi-<code>tqdm</code> (#143)</li> <li>\ud83d\udd28 <code>flush()</code> and <code>refresh()</code> (#331)</li> <li>\ud83d\udd28 Newline on <code>refresh()</code> (#361)</li> <li>\ud83d\udd28 Nested trees (#384)</li> <li>\ud83d\udd28 Manually positioned nested bars clearing (#385)</li> </ul>"},{"location":"releases/#v4171-2017-09-26","title":"v4.17.1 (2017-09-26)","text":"<p>whl|asc|gz|asc</p> <ul> <li>\ud83d\udd28 initialise <code>n</code> even when disabled (#438)</li> <li>\ud83c\udf89 better unicode detection (#437)</li> <li>\ud83e\uddef <code>__repr__()</code> bugfix (#441)</li> </ul>"},{"location":"releases/#v4170-2017-09-20","title":"v4.17.0 (2017-09-20)","text":"<p>whl|asc|gz|asc</p> <ul> <li>\ud83d\udd28 easier redirect of <code>stdout</code> (#426 -&gt; #431)         - <code>cls.external_write_mode() @contextmanager</code></li> <li>\ud83d\udd28 <code>refresh=True</code> for <code>set_description</code>/<code>update</code>(<code>_str</code>) (#317 -&gt; #377)</li> </ul>"},{"location":"releases/#v4160-2017-09-20","title":"v4.16.0 (2017-09-20)","text":"<p>whl|asc|gz|asc</p> <ul> <li>\ud83d\udd28 more formatting control (#347 -&gt; #362)         - <code>set_postfix_str()</code>, <code>set_description_str()</code>         - move <code>\": \"</code> to <code>bar_format</code>         - complements #266, #270</li> <li>\ud83c\udf89 better CLI support (e.g. hyphenated paths) (#421 -&gt; #424)</li> <li>\ud83d\udd0d more unit tests (#411)         - upgrade to pypy2/3-5.8.0         - add py37-dev</li> <li>\ud83d\udcd8 doc updates</li> </ul>"},{"location":"releases/#v4150-2017-07-29","title":"v4.15.0 (2017-07-29)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef minor fixes (#395)</li> <li>\ud83d\udcd8 minor documentation updates (#400, #401, #412)</li> <li>\ud83c\udf89 better <code>pandas</code> support (#351 -&gt; #409)</li> <li>\ud83e\uddef Jupyter notebook fix (#352, #369 -&gt; #373, #405)</li> <li>\u26a1 optimise <code>setcheckinterval</code>/<code>setswitchinterval</code> (#376)</li> <li>\ud83c\udf89 add <code>unit_scale</code> (#273, #295 -&gt; #378)</li> </ul>"},{"location":"releases/#v4140-2017-07-29","title":"v4.14.0 (2017-07-29)","text":"<ul> <li>\ud83c\udf89 add <code>unit_divisor</code> #354 -&gt; #356 </li> <li>\ud83d\udcd8 update examples</li> </ul>"},{"location":"releases/#v4130-2017-05-29","title":"v4.13.0 (2017-05-29)","text":"<p>whl|asc</p> <ul> <li>\ud83c\udf89 support unknown systems https://github.com/warner/magic-wormhole/issues/158, #76, #344 -&gt; #390</li> <li>\ud83c\udf89 support nested/multi-bars better #384, #285, #329 -&gt; #385</li> <li>\ud83d\udd28 ease redirection of output (default: <code>sys.stderr</code> -&gt; <code>None</code>) https://github.com/xonsh/xonsh/issues/2058, #329, #275 -&gt; #293         + add examples/redirect_print.py</li> <li>\ud83d\udcd8 minor documentation updates</li> </ul>"},{"location":"releases/#v4120-2017-05-29","title":"v4.12.0 (2017-05-29)","text":"<p>whl|asc</p> <ul> <li>\ud83e\uddef fix monitor race condition #338 -&gt; #339</li> <li>\ud83c\udf89 add explicit NetBSD support #344</li> <li>\ud83e\uddf9 documentation tidy</li> </ul>"},{"location":"releases/#v4112-2017-01-24","title":"v4.11.2 (2017-01-24)","text":"<p>whl|asc|gz|asc</p> <ul> <li>\u26d1 thread safety #332</li> <li>\ud83d\udd28 address <code>DeprecationWarning</code> #319 -&gt; #326</li> <li>\ud83d\udd28 version extra #328 -&gt; #330<ul> <li>security fix (CVE-2016-10075)</li> <li>add non-master branch name</li> </ul> </li> <li>\u26d1 minor safety</li> <li>\ud83d\udcd8 minor documentation and comments</li> </ul>"},{"location":"releases/#v4111-2017-01-23","title":"v4.11.1 (2017-01-23)","text":"<p>whl|asc|gz|asc</p> <p>Officially support Python 3.6, addressing #333</p>"},{"location":"releases/#v4110-2017-01-12","title":"v4.11.0 (2017-01-12)","text":"<p>whl|gz</p> <ul> <li>\ud83c\udf89 <code>postfix</code> argument added #266-&gt;#270 </li> <li>\ud83e\uddef fix tests for<ul> <li><code>numpy</code> #272-&gt;#302</li> <li><code>PyPy3</code> #318-&gt;#325</li> </ul> </li> <li>\ud83d\udcd8 <code>7z</code> extraction example script</li> <li>\ud83d\udcd8 new logo #315 </li> <li>\ud83d\udcd8 hit counter with logo colours and stats</li> <li>\ud83d\udcd8 documentation updates</li> <li>\u26d1 safer <code>setup.py</code> <code>Makefile</code> emulation</li> <li>\ud83d\udcd8 better github contributions integrations and Code of Conduct #310</li> </ul>"},{"location":"releases/#v4100-2016-11-12","title":"v4.10.0 (2016-11-12)","text":"<p>gz|zip</p> <ul> <li>\ud83e\uddef fix maxinterval to adjust miniters to mininterval #249</li> <li>\ud83e\uddef minor bugfixes (eg #288)</li> <li>\u26a1 misc optimisations, unit tests, and benchmarks (eg #298)</li> <li>\ud83d\udcd8 documentation updates</li> </ul>"},{"location":"releases/#v490-2016-10-31","title":"v4.9.0 (2016-10-31)","text":"<p>gz|zip</p> <ul> <li>\ud83d\udd28 monitoring thread to automatically to adjust <code>miniters</code> and avoid exceeding <code>maxinterval</code><ul> <li>test race conditions</li> <li>kill on KeyboardInterrupt + instant refresh</li> <li>low performance overhead, option to disable</li> </ul> </li> <li>\ud83c\udf89 new CLI argument: <code>--bytes</code> to count chars</li> <li>\ud83d\udd28 disable automatically on non-TTY (#281)</li> <li>\ud83e\uddef fixed <code>refresh()</code> and <code>clear()</code> if disabled (#286)</li> <li>\ud83e\uddef misc fixes</li> <li>\ud83d\udcd8 documentation</li> <li>\ud83d\udd0d unit tests</li> <li>\u26a1 optimisations, style fixes</li> <li>\ud83d\udcd8 codacy badge</li> <li>\u26a0\ufe0f safety and warning suppression</li> <li>\ud83d\udd28 ignore coverall failures (#283)</li> <li>\ud83e\uddef fix broken link in README (#262)</li> <li>\u26a1 Fix <code>time()</code> in <code>refresh()</code> + avoid <code>write()</code> races (#264)</li> <li>\ud83e\uddef Fix <code>__repr__()</code> #269</li> <li>\ud83e\uddef Fix <code>update(0)</code> causing <code>ZeroDivisionError</code> (on first call) #268</li> <li>\ud83d\udd0d Faster simple bar for perf test (#257)</li> <li>\ud83d\udd28 cleaner <code>tqdm_notebook</code> exit when not run in a notebook (#267)</li> <li>\ud83d\udd28 Disable coveralls because of duplicate comments on github (#263)</li> <li>\ud83d\udd28 Migrate codecov config -&gt; codecov.yml</li> </ul>"},{"location":"releases/#v484-2016-08-17","title":"v4.8.4 (2016-08-17)","text":"<p>whl|gz</p> <ul> <li>\u26a1 14% overhead reduction</li> <li>\ud83e\uddef fix exception when closing <code>tqdm_notebook</code> without a <code>total</code></li> <li>\ud83c\udf89 support more pandas modules<ul> <li>pandas.Series.progress_map</li> <li>pandas.DataFrame.progress_applymap</li> <li>Panel.progress_apply</li> <li>PanelGroupBy.progress_apply</li> <li>GroupBy.progress_aggregate</li> <li>GroupBy.progress_transform</li> </ul> </li> <li>\ud83d\udee0 faster CI builds</li> <li>\ud83d\udcd8 misc documentation update and link to wiki</li> </ul>"},{"location":"releases/#v481-2016-07-25","title":"v4.8.1 (2016-07-25)","text":"<ul> <li>\u26a0\ufe0f custom tqdm warning/exceptions</li> <li>\ud83d\udd0d tests now multiprocessed and include pandas</li> </ul>"},{"location":"releases/#v480-2016-07-25","title":"v4.8.0 (2016-07-25)","text":"<ul> <li>\u26a0\ufe0f <code>tqdm.pandas</code> classmethod replaces <code>tqdm_pandas</code> function (deprecated)</li> <li>\ud83e\uddef <code>ipython</code> aliased imports fixes</li> <li>\ud83d\udd28 <code>write</code> without any instances</li> <li>\ud83d\udcd8 readme update</li> <li>\ud83d\udcd8 examples update</li> <li>\ud83e\uddef test fixes and updates</li> </ul>"},{"location":"releases/#v476-2016-06-30","title":"v4.7.6 (2016-06-30)","text":"<ul> <li>\ud83c\udf89 support for pandas series</li> <li>\ud83c\udf89 support for numpy arrays</li> <li>\ud83e\uddf9 tidy &amp; coverage</li> </ul>"},{"location":"releases/#v474-2016-06-04","title":"v4.7.4 (2016-06-04)","text":"<p>whl|gz</p> <ul> <li>\ud83c\udf89 <code>pandas.DataFrame.apply</code> support</li> <li>\ud83d\udd28 <code>tqdm_notebook.write()</code></li> <li>\ud83d\udd28 <code>tqdm_gui.write()</code></li> <li>\ud83e\uddef misc notebook fixes</li> <li>\u26a1 delay notebook imports (&gt;80% reduction in import time when unused)</li> <li>\ud83d\udd28 optional <code>colorama</code> only on windows</li> <li>\ud83e\uddf9 documentation tidy</li> <li>\ud83d\udd0d more &amp; faster tests</li> </ul>"},{"location":"releases/#v470-2016-05-15","title":"v4.7.0 (2016-05-15)","text":"<p>whl|gz</p> <ul> <li>\ud83c\udf89 CLI custom delimiter support</li> <li>\ud83d\udd28 More robust CLI argument parsing<ul> <li>either one or two <code>-</code> preceding kwargs (eg <code>-ascii</code> or <code>--ascii</code>)</li> <li>no positional args (so no need to quote multi-word <code>-desc</code> for example)</li> <li><code>bool</code> kwargs with implicit value=<code>True</code> still supported</li> <li>optional <code>=</code> sign after kwargs</li> </ul> </li> <li>\ud83d\udd0d tests</li> <li>\ud83d\udcd8 doc updates, badges<ul> <li>pyversions, doi, licence, github</li> </ul> </li> </ul>"},{"location":"releases/#v462-2016-05-15","title":"v4.6.2 (2016-05-15)","text":"<p>whl|gz|exe|zip</p> <ul> <li>\ud83e\uddef Fix warnings due to IPython/Jupyter widget</li> </ul>"},{"location":"releases/#v461-2016-05-15","title":"v4.6.1 (2016-05-15)","text":"<p>whl|gz|exe|zip</p> <ul> <li>\ud83c\udf89 add IPython/Jupyter support</li> <li>\ud83e\uddef fix <code>{bar}</code> length breaking display when using custom <code>bar_format</code></li> <li>\ud83c\udf89 add a no inversion rate formatting for <code>bar_format</code> (i.e., always show <code>it/s</code> and never <code>s/it</code>)</li> </ul>"},{"location":"releases/#v450-2016-04-25","title":"v4.5.0 (2016-04-25)","text":"<p>whl|gz|zip</p> <ul> <li>\ud83d\udd28 print messages within (nested) loops using <code>tqdm.write(...)</code></li> </ul>"},{"location":"releases/#v443-2016-04-24","title":"v4.4.3 (2016-04-24)","text":"<p>whl|gz|zip</p> <ul> <li>\ud83e\uddf9 remove <code>docopt</code> dependency for CLI</li> <li>\ud83c\udf89 re-added <code>update(0)</code> ability to trigger refresh</li> <li>\ud83e\uddef minor fixes<ul> <li>re-added (OSI approved) licence to source</li> <li>dev versioning auto-fallback</li> </ul> </li> <li>\u26a1 slight speed optimisation</li> <li>\ud83d\udd0d tests</li> <li>\ud83d\udcd8 documentation</li> </ul>"},{"location":"releases/#v441-2016-04-22","title":"v4.4.1 (2016-04-22)","text":"<p>whl|gz|zip</p> <ul> <li>\ud83d\udd28 Module execution in CLI pipes!<ul> <li><code>tqdm</code> executable</li> <li>documentation</li> <li>tests</li> </ul> </li> <li>\ud83d\udd28 MSYS aded to supported envs</li> <li>\ud83c\udf89 better VTE support</li> <li>\ud83d\udd28 dev versioning</li> <li>\ud83d\udd0d tests</li> </ul>"},{"location":"releases/#v420-2016-04-22","title":"v4.2.0 (2016-04-22)","text":"<p>whl|gz|zip</p> <ul> <li>\ud83d\udcd8 MPL licence!</li> <li>\ud83d\udcd8 slightly updated logo</li> <li>\ud83d\udcd8 update examples</li> <li>\ud83d\udd28 <code>update(0)</code> allowed</li> <li>\ud83c\udf89 better VTE support<ul> <li>ascii fallback when unicode not available</li> </ul> </li> </ul>"},{"location":"releases/#v400-2016-02-04","title":"v4.0.0 (2016-02-04)","text":"<p>whl|gz|zip</p> <ul> <li>\ud83d\udd28 automate <code>nested</code><ul> <li>deprecate <code>nested</code></li> <li>add manual override control with <code>position</code></li> </ul> </li> <li>\ud83d\udcd8 documentation and example updates, coverage and tests</li> <li>\ud83d\udd28 make <code>leave==True</code> by default (was <code>False</code>)</li> </ul>"},{"location":"releases/#v380-2016-01-31","title":"v3.8.0 (2016-01-31)","text":"<p>whl|gz|zip</p> <ul> <li>\ud83d\udd28 update(n&lt;1) raises error</li> <li>\ud83d\udcd8 sanitise and update examples and README</li> <li>\ud83e\uddef fix setup.py encoding error</li> <li>\ud83e\uddf9 remove py32 from Travis</li> <li>\ud83d\udcd8 changelog more accessible from README</li> </ul>"},{"location":"releases/#v371-2016-01-13","title":"v3.7.1 (2016-01-13)","text":"<p>whl|gz|exe|zip</p> <ul> <li>\ud83c\udf89 Added more OS support (FreeBSD, Solaris/SunOS)</li> <li>\ud83d\udd0d Added Python3.5 support and tests</li> <li>\ud83c\udf89 Added IronPython2.7 support</li> <li>\ud83e\uddef Fix Makefile management for Python3</li> <li>\ud83d\udd0d Added relative timing for tests</li> <li>\ud83d\udd28 More stable smoothed ETA</li> <li>\u2692 Refactoring everything into one big <code>tqdm</code> class for even more subclassing fun</li> </ul>"},{"location":"releases/#v360-2015-12-31","title":"v3.6.0 (2015-12-31)","text":"<p>whl|gz|zip</p> <p>Added support for \"restarting\" a progressbar after a long pause without making the iteration rate go haywire. Simply call the <code>unpause()</code> method on the <code>tqdm</code> instance that is about to be restarted. Can also start <code>tqdm</code> skipping a number of steps specified by <code>initial</code> (without bias-ing ETA).</p>"},{"location":"releases/#v350-2015-12-31","title":"v3.5.0 (2015-12-31)","text":"<p>whl|gz|zip</p> <ul> <li>\ud83d\udd28 Fully customisable output format using the <code>bar_format</code> keyword argument.<ul> <li>Valid strings: bar, n, n_fmt, total, total_fmt, percentage, rate, rate_fmt, elapsed, remaining, l_bar, r_bar, desc</li> <li>Example: <code>bar_format='{desc}{bar}{rate:03.3d}'</code></li> <li>Default: '{l_bar}{bar}{r_bar}', where l_bar is '{desc}{percentage:3.0f}%|' and r_bar is '| {n_fmt}/{total_fmt} [{elapsed_str}&lt;{remaining_str}, {rate_fmt}]'.</li> </ul> </li> <li>\ud83c\udf89 Solaris, FreeBSD support mentioned</li> <li>\ud83d\udd28 Link redirects circumvented</li> </ul>"},{"location":"releases/#v330-2015-12-31","title":"v3.3.0 (2015-12-31)","text":"<p>whl|gz|zip</p> <ul> <li>\ud83c\udf89 Support added for pandas <code>apply</code> =&gt; <code>progress_apply</code></li> <li>\ud83d\udd28 80-char width when running interactive <code>help()</code></li> <li>\ud83d\udcd8 update examples using <code>with</code> syntax</li> </ul>"},{"location":"releases/#v314-2015-11-28","title":"v3.1.4 (2015-11-28)","text":"<p>whl|gz|exe|zip</p> <p>Added <code>smoothing</code> and <code>maxinterval</code> features for smooth progress bar and rate for unconstant, variable changes in update times, and abstracted gui to its own class and file.</p> <p>Also added a performance test to prevent performance regressions.</p>"},{"location":"releases/#v224-2015-11-08","title":"v2.2.4 (2015-11-08)","text":"<p>whl|gz|exe|zip</p> <p>Added the dynamic management of the bar on window resize, plus a better internal testing/build workflow using <code>python setup.py make [alias]</code>.</p>"},{"location":"releases/#v200-2015-10-11","title":"v2.0.0 (2015-10-11)","text":"<p>whl|gz|exe|zip</p> <p>First public release of the next generation of tqdm, with lots of new features, more speed, more unit testing, more coverage (100% yeah!), more beer and coffee.</p> <p>This release can also be downloaded on PyPi here.</p>"},{"location":"video/","title":"Video","text":"<ul> <li>Slides (<code>space</code> &amp; <code>shift</code>+<code>space</code> for navigation)</li> </ul>"},{"location":"dev/TMonitor/","title":"tqdm.TMonitor","text":""},{"location":"dev/TMonitor/#tqdm_monitor","title":"tqdm._monitor","text":""},{"location":"dev/TMonitor/#tmonitor-objects","title":"TMonitor Objects","text":"<p> [view source] </p> <pre><code>class TMonitor(Thread)\n</code></pre> <p>Monitoring thread for tqdm bars. Monitors if tqdm bars are taking too much time to display and readjusts miniters automatically if necessary.</p> <p>Parameters</p> <ul> <li>tqdm_cls: class     tqdm class to use (can be core tqdm or a submodule).</li> <li>sleep_interval: float     Time to sleep between monitoring checks.</li> </ul>"},{"location":"dev/warnings/","title":"Warnings and Exceptions","text":""},{"location":"dev/warnings/#tqdmstd","title":"tqdm.std","text":"<p>Customisable progressbar decorator for iterators. Includes a default <code>range</code> iterator printing to <code>stderr</code>.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm import trange, tqdm\n&gt;&gt;&gt; for i in trange(10):\n...     ...\n</code></pre></p> <p></p>"},{"location":"dev/warnings/#tqdmwarning-objects","title":"TqdmWarning Objects","text":"<p> [view source] </p> <pre><code>class TqdmWarning(Warning)\n</code></pre> <p>base class for all tqdm warnings.</p> <p>Used for non-external-code-breaking errors, such as garbled printing.</p> <p></p>"},{"location":"dev/warnings/#tqdmexperimentalwarning-objects","title":"TqdmExperimentalWarning Objects","text":"<p> [view source] </p> <pre><code>class TqdmExperimentalWarning(TqdmWarning, FutureWarning)\n</code></pre> <p>beta feature, unstable API and behaviour</p> <p></p>"},{"location":"dev/warnings/#tqdmmonitorwarning-objects","title":"TqdmMonitorWarning Objects","text":"<p> [view source] </p> <pre><code>class TqdmMonitorWarning(TqdmWarning, RuntimeWarning)\n</code></pre> <p>tqdm monitor errors which do not affect external functionality</p> <p></p>"},{"location":"dev/warnings/#tqdmdefaultwritelock-objects","title":"TqdmDefaultWriteLock Objects","text":"<p> [view source] </p> <pre><code>class TqdmDefaultWriteLock(object)\n</code></pre> <p>Provide a default write lock for thread and multiprocessing safety. Works only on platforms supporting <code>fork</code> (so Windows is excluded). You must initialise a <code>tqdm</code> or <code>TqdmDefaultWriteLock</code> instance before forking in order for the write lock to work. On Windows, you need to supply the lock from the parent to the children as an argument to joblib or the parallelism lib you use.</p>"},{"location":"docs/asyncio/","title":"tqdm.asyncio","text":""},{"location":"docs/asyncio/#tqdmasyncio","title":"tqdm.asyncio","text":"<p>Asynchronous progressbar decorator for iterators. Includes a default <code>range</code> iterator printing to <code>stderr</code>.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.asyncio import trange, tqdm\n&gt;&gt;&gt; async for i in trange(10):\n...     ...\n</code></pre></p> <p></p>"},{"location":"docs/asyncio/#tqdm_asyncio-objects","title":"tqdm_asyncio Objects","text":"<p> [view source] </p> <pre><code>class tqdm_asyncio(std_tqdm)\n</code></pre> <p>Asynchronous-friendly version of tqdm.</p> <p></p>"},{"location":"docs/asyncio/#as_completed","title":"as_completed","text":"<p> [view source] </p> <pre><code>@classmethod\ndef as_completed(cls,\n                 fs,\n                 *,\n                 loop=None,\n                 timeout=None,\n                 total=None,\n                 **tqdm_kwargs)\n</code></pre> <p>Wrapper for <code>asyncio.as_completed</code>.</p> <p></p>"},{"location":"docs/asyncio/#gather","title":"gather","text":"<p> [view source] </p> <pre><code>@classmethod\nasync def gather(cls, *fs, loop=None, timeout=None, total=None, **tqdm_kwargs)\n</code></pre> <p>Wrapper for <code>asyncio.gather</code>.</p> <p></p>"},{"location":"docs/asyncio/#tarange","title":"tarange","text":"<p> [view source] </p> <pre><code>def tarange(*args, **kwargs)\n</code></pre> <p>A shortcut for <code>tqdm.asyncio.tqdm(range(*args), **kwargs)</code>.</p>"},{"location":"docs/cli/","title":"CLI","text":"<p><code>tqdm</code>'s command line interface (CLI) can be used in a script or on the terminal/console. Simply inserting <code>tqdm</code> (or <code>python -m tqdm</code>) between pipes will pass through all <code>stdin</code> to <code>stdout</code> while printing progress to <code>stderr</code>.</p> <p>Run <code>tqdm --help</code> for a full list of options.</p> <p>The example below demonstrate counting the number of lines in all Python files in the current directory, with timing information included.</p> <pre><code>$ time find . -name '*.py' -type f -exec cat \\{} \\; | wc -l\n857365\n\nreal    0m3.458s\nuser    0m0.274s\nsys     0m3.325s\n\n$ time find . -name '*.py' -type f -exec cat \\{} \\; | tqdm | wc -l\n857366it [00:03, 246471.31it/s]\n857365\n\nreal    0m3.585s\nuser    0m0.862s\nsys     0m3.358s\n</code></pre> <p>Note that the usual arguments for <code>tqdm</code> can also be specified.</p> <pre><code>$ find . -name '*.py' -type f -exec cat \\{} \\; \\\n| tqdm --unit loc --unit_scale --total 857366 &gt;&gt; /dev/null\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 857K/857K [00:04&lt;00:00, 246Kloc/s]\n</code></pre> <p>Backing up a large directory?</p> <pre><code>$ tar -zcf - docs/ | tqdm --bytes --total `du -sb docs/ | cut -f1` \\\n&gt; backup.tgz\n44%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a                   | 153M/352M [00:14&lt;00:18, 11.0MB/s]\n</code></pre> <p>This can be beautified further:</p> <pre><code>$ BYTES=\"$(du -sb docs/ | cut -f1)\"\n$ tar -cf - docs/ \\\n| tqdm --bytes --total \"$BYTES\" --desc Processing | gzip \\\n| tqdm --bytes --total \"$BYTES\" --desc Compressed --position 1 \\\n&gt; ~/backup.tgz\nProcessing: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 352M/352M [00:14&lt;00:00, 30.2MB/s]\nCompressed:  42%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e            | 148M/352M [00:14&lt;00:19, 10.9MB/s]\n</code></pre> <p>Or done on a file level using 7-zip:</p> <pre><code>$ 7z a -bd -r backup.7z docs/ | grep Compressing \\\n| tqdm --total $(find docs/ -type f | wc -l) --unit files \\\n| grep -v Compressing\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2589| 15327/15327 [01:00&lt;00:00, 712.96files/s]\n</code></pre> <p>Pre-existing CLI programs already outputting basic progress information will benefit from <code>tqdm</code>'s <code>--update</code> and <code>--update_to</code> flags:</p> <pre><code>$ seq 3 0.1 5 | tqdm --total 5 --update_to --null\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5.0/5 [00:00&lt;00:00, 9673.21it/s]\n$ seq 10 | tqdm --update --null  # 1 + 2 + ... + 10 = 55 iterations\n55it [00:00, 90006.52it/s]\n</code></pre>"},{"location":"docs/contrib.concurrent/","title":"tqdm.contrib.concurrent","text":""},{"location":"docs/contrib.concurrent/#tqdmcontribconcurrent","title":"tqdm.contrib.concurrent","text":"<p>Thin wrappers around <code>concurrent.futures</code>.</p> <p></p>"},{"location":"docs/contrib.concurrent/#ensure_lock","title":"ensure_lock","text":"<p> [view source] </p> <pre><code>@contextmanager\ndef ensure_lock(tqdm_class, lock_name=\"\")\n</code></pre> <p>get (create if necessary) and then restore <code>tqdm_class</code>'s lock</p> <p></p>"},{"location":"docs/contrib.concurrent/#thread_map","title":"thread_map","text":"<p> [view source] </p> <pre><code>def thread_map(fn, *iterables, **tqdm_kwargs)\n</code></pre> <p>Equivalent of <code>list(map(fn, *iterables))</code> driven by <code>concurrent.futures.ThreadPoolExecutor</code>.</p> <p>Parameters</p> <ul> <li>tqdm_class: optional <code>tqdm</code> class to use for bars [default: tqdm.auto.tqdm].</li> <li>max_workers: int, optional     Maximum number of workers to spawn; passed to     <code>concurrent.futures.ThreadPoolExecutor.__init__</code>.     [default: max(32, cpu_count() + 4)].</li> </ul> <p></p>"},{"location":"docs/contrib.concurrent/#process_map","title":"process_map","text":"<p> [view source] </p> <pre><code>def process_map(fn, *iterables, **tqdm_kwargs)\n</code></pre> <p>Equivalent of <code>list(map(fn, *iterables))</code> driven by <code>concurrent.futures.ProcessPoolExecutor</code>.</p> <p>Parameters</p> <ul> <li>tqdm_class: optional <code>tqdm</code> class to use for bars [default: tqdm.auto.tqdm].</li> <li>max_workers: int, optional     Maximum number of workers to spawn; passed to     <code>concurrent.futures.ProcessPoolExecutor.__init__</code>.     [default: min(32, cpu_count() + 4)].</li> <li>chunksize: int, optional     Size of chunks sent to worker processes; passed to     <code>concurrent.futures.ProcessPoolExecutor.map</code>. [default: 1].</li> <li>lock_name: str, optional     Member of <code>tqdm_class.get_lock()</code> to use [default: mp_lock].</li> </ul>"},{"location":"docs/contrib.discord/","title":"tqdm.contrib.discord","text":""},{"location":"docs/contrib.discord/#tqdmcontribdiscord","title":"tqdm.contrib.discord","text":"<p>Sends updates to a Discord bot.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.contrib.discord import tqdm, trange\n&gt;&gt;&gt; for i in trange(10, token='{token}', channel_id='{channel_id}'):\n...     ...\n</code></pre></p> <p></p> <p></p>"},{"location":"docs/contrib.discord/#tqdm_discord-objects","title":"tqdm_discord Objects","text":"<p> [view source] </p> <pre><code>class tqdm_discord(tqdm_auto)\n</code></pre> <p>Standard <code>tqdm.auto.tqdm</code> but also sends updates to a Discord Bot. May take a few seconds to create (<code>__init__</code>).</p> <ul> <li>create a discord bot (not public, no requirement of OAuth2 code   grant, only send message permissions) &amp; invite it to a channel:   https://discordpy.readthedocs.io/en/latest/discord.html</li> <li>copy the bot <code>{token}</code> &amp; <code>{channel_id}</code> and paste below</li> </ul> <pre><code>&gt;&gt;&gt; from tqdm.contrib.discord import tqdm, trange\n&gt;&gt;&gt; for i in tqdm(iterable, token='{token}', channel_id='{channel_id}'):\n...     ...\n</code></pre> <p></p>"},{"location":"docs/contrib.discord/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(*args, **kwargs)\n</code></pre> <p>Parameters</p> <ul> <li>token: str, required. Discord token     [default: ${TQDM_DISCORD_TOKEN}].</li> <li>channel_id: int, required. Discord channel ID     [default: ${TQDM_DISCORD_CHANNEL_ID}].</li> <li>mininterval: float, optional.   Minimum of [default: 1.5] to avoid rate limit.</li> </ul> <p>See <code>tqdm.auto.tqdm.__init__</code> for other parameters.</p> <p></p>"},{"location":"docs/contrib.discord/#tdrange","title":"tdrange","text":"<p> [view source] </p> <pre><code>def tdrange(*args, **kwargs)\n</code></pre> <p>Shortcut for <code>tqdm.contrib.discord.tqdm(range(*args), **kwargs)</code>.</p>"},{"location":"docs/contrib.itertools/","title":"tqdm.contrib.itertools","text":""},{"location":"docs/contrib.itertools/#tqdmcontribitertools","title":"tqdm.contrib.itertools","text":"<p>Thin wrappers around <code>itertools</code>.</p> <p></p>"},{"location":"docs/contrib.itertools/#product","title":"product","text":"<p> [view source] </p> <pre><code>def product(*iterables, **tqdm_kwargs)\n</code></pre> <p>Equivalent of <code>itertools.product</code>.</p> <p>Parameters</p> <ul> <li>tqdm_class: [default: tqdm.auto.tqdm]. </li> </ul>"},{"location":"docs/contrib.logging/","title":"tqdm.contrib.logging","text":""},{"location":"docs/contrib.logging/#tqdmcontriblogging","title":"tqdm.contrib.logging","text":"<p>Helper functionality for interoperability with stdlib <code>logging</code>.</p> <p></p>"},{"location":"docs/contrib.logging/#logging_redirect_tqdm","title":"logging_redirect_tqdm","text":"<p> [view source] </p> <pre><code>@contextmanager\ndef logging_redirect_tqdm(loggers=None, tqdm_class=std_tqdm)\n</code></pre> <p>Context manager redirecting console logging to <code>tqdm.write()</code>, leaving other logging handlers (e.g. log files) unaffected.</p> <p>Parameters</p> <ul> <li>loggers: list, optional   Which handlers to redirect (default: [logging.root]).</li> <li>tqdm_class: optional </li> </ul> <p>Example</p> <pre><code>import logging\nfrom tqdm import trange\nfrom tqdm.contrib.logging import logging_redirect_tqdm\n\nLOG = logging.getLogger(__name__)\n\nif __name__ == '__main__':\n    logging.basicConfig(level=logging.INFO)\n    with logging_redirect_tqdm():\n        for i in trange(9):\n            if i == 4:\n                LOG.info(\"console logging redirected to `tqdm.write()`\")\n    # logging restored\n</code></pre> <p></p>"},{"location":"docs/contrib.logging/#tqdm_logging_redirect","title":"tqdm_logging_redirect","text":"<p> [view source] </p> <pre><code>@contextmanager\ndef tqdm_logging_redirect(*args, **kwargs)\n</code></pre> <p>Convenience shortcut for: <pre><code>with tqdm_class(*args, **tqdm_kwargs) as pbar:\n    with logging_redirect_tqdm(loggers=loggers, tqdm_class=tqdm_class):\n        yield pbar\n</code></pre></p> <p>Parameters</p> <ul> <li>tqdm_class: optional, (default: tqdm.std.tqdm). </li> <li>loggers: optional, list. **tqdm_kwargs  : passed to <code>tqdm_class</code>.</li> </ul>"},{"location":"docs/contrib/","title":"tqdm.contrib","text":""},{"location":"docs/contrib/#tqdmcontrib","title":"tqdm.contrib","text":"<p>Thin wrappers around common functions.</p> <p>Subpackages contain potentially unstable extensions.</p> <p></p>"},{"location":"docs/contrib/#tenumerate","title":"tenumerate","text":"<p> [view source] </p> <pre><code>def tenumerate(iterable,\n               start=0,\n               total=None,\n               tqdm_class=tqdm_auto,\n               **tqdm_kwargs)\n</code></pre> <p>Equivalent of <code>numpy.ndenumerate</code> or builtin <code>enumerate</code>.</p> <p>Parameters</p> <ul> <li>tqdm_class: [default: tqdm.auto.tqdm]. </li> </ul> <p></p>"},{"location":"docs/contrib/#tzip","title":"tzip","text":"<p> [view source] </p> <pre><code>def tzip(iter1, *iter2plus, **tqdm_kwargs)\n</code></pre> <p>Equivalent of builtin <code>zip</code>.</p> <p>Parameters</p> <ul> <li>tqdm_class: [default: tqdm.auto.tqdm]. </li> </ul> <p></p>"},{"location":"docs/contrib/#tmap","title":"tmap","text":"<p> [view source] </p> <pre><code>def tmap(function, *sequences, **tqdm_kwargs)\n</code></pre> <p>Equivalent of builtin <code>map</code>.</p> <p>Parameters</p> <ul> <li>tqdm_class: [default: tqdm.auto.tqdm]. </li> </ul>"},{"location":"docs/contrib.slack/","title":"tqdm.contrib.slack","text":""},{"location":"docs/contrib.slack/#tqdmcontribslack","title":"tqdm.contrib.slack","text":"<p>Sends updates to a Slack app.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.contrib.slack import tqdm, trange\n&gt;&gt;&gt; for i in trange(10, token='{token}', channel='{channel}'):\n...     ...\n</code></pre></p> <p></p> <p></p>"},{"location":"docs/contrib.slack/#tqdm_slack-objects","title":"tqdm_slack Objects","text":"<p> [view source] </p> <pre><code>class tqdm_slack(tqdm_auto)\n</code></pre> <p>Standard <code>tqdm.auto.tqdm</code> but also sends updates to a Slack app. May take a few seconds to create (<code>__init__</code>).</p> <ul> <li>create a Slack app with the <code>chat:write</code> scope &amp; invite it to a   channel: https://api.slack.com/authentication/basics</li> <li>copy the bot <code>{token}</code> &amp; <code>{channel}</code> and paste below <pre><code>&gt;&gt;&gt; from tqdm.contrib.slack import tqdm, trange\n&gt;&gt;&gt; for i in tqdm(iterable, token='{token}', channel='{channel}'):\n...     ...\n</code></pre></li> </ul> <p></p>"},{"location":"docs/contrib.slack/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(*args, **kwargs)\n</code></pre> <p>Parameters</p> <ul> <li>token: str, required. Slack token     [default: ${TQDM_SLACK_TOKEN}].</li> <li>channel: int, required. Slack channel     [default: ${TQDM_SLACK_CHANNEL}].</li> <li>mininterval: float, optional.   Minimum of [default: 1.5] to avoid rate limit.</li> </ul> <p>See <code>tqdm.auto.tqdm.__init__</code> for other parameters.</p> <p></p>"},{"location":"docs/contrib.slack/#tsrange","title":"tsrange","text":"<p> [view source] </p> <pre><code>def tsrange(*args, **kwargs)\n</code></pre> <p>Shortcut for <code>tqdm.contrib.slack.tqdm(range(*args), **kwargs)</code>.</p>"},{"location":"docs/contrib.telegram/","title":"tqdm.contrib.telegram","text":""},{"location":"docs/contrib.telegram/#tqdmcontribtelegram","title":"tqdm.contrib.telegram","text":"<p>Sends updates to a Telegram bot.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.contrib.telegram import tqdm, trange\n&gt;&gt;&gt; for i in trange(10, token='{token}', chat_id='{chat_id}'):\n...     ...\n</code></pre></p> <p></p> <p></p>"},{"location":"docs/contrib.telegram/#tqdm_telegram-objects","title":"tqdm_telegram Objects","text":"<p> [view source] </p> <pre><code>class tqdm_telegram(tqdm_auto)\n</code></pre> <p>Standard <code>tqdm.auto.tqdm</code> but also sends updates to a Telegram Bot. May take a few seconds to create (<code>__init__</code>).</p> <ul> <li>create a bot https://core.telegram.org/bots#6-botfather</li> <li>copy its <code>{token}</code></li> <li>add the bot to a chat and send it a message such as <code>/start</code></li> <li>go to https://api.telegram.org/bot<code>{token}</code>/getUpdates to find out   the <code>{chat_id}</code></li> <li>paste the <code>{token}</code> &amp; <code>{chat_id}</code> below</li> </ul> <pre><code>&gt;&gt;&gt; from tqdm.contrib.telegram import tqdm, trange\n&gt;&gt;&gt; for i in tqdm(iterable, token='{token}', chat_id='{chat_id}'):\n...     ...\n</code></pre> <p></p>"},{"location":"docs/contrib.telegram/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(*args, **kwargs)\n</code></pre> <p>Parameters</p> <ul> <li>token: str, required. Telegram token     [default: ${TQDM_TELEGRAM_TOKEN}].</li> <li>chat_id: str, required. Telegram chat ID     [default: ${TQDM_TELEGRAM_CHAT_ID}].</li> </ul> <p>See <code>tqdm.auto.tqdm.__init__</code> for other parameters.</p> <p></p>"},{"location":"docs/contrib.telegram/#ttgrange","title":"ttgrange","text":"<p> [view source] </p> <pre><code>def ttgrange(*args, **kwargs)\n</code></pre> <p>Shortcut for <code>tqdm.contrib.telegram.tqdm(range(*args), **kwargs)</code>.</p>"},{"location":"docs/dask/","title":"tqdm.dask","text":""},{"location":"docs/dask/#tqdmdask","title":"tqdm.dask","text":""},{"location":"docs/dask/#tqdmcallback-objects","title":"TqdmCallback Objects","text":"<p> [view source] </p> <pre><code>class TqdmCallback(Callback)\n</code></pre> <p>Dask callback for task progress.</p> <p></p>"},{"location":"docs/dask/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(start=None, pretask=None, tqdm_class=tqdm_auto, **tqdm_kwargs)\n</code></pre> <p>Parameters</p> <ul> <li>tqdm_class: optional <code>tqdm</code> class to use for bars [default: <code>tqdm.auto.tqdm</code>].</li> <li>tqdm_kwargs: optional     Any other arguments used for all bars.</li> </ul> <p></p>"},{"location":"docs/dask/#display","title":"display","text":"<p> [view source] </p> <pre><code>def display()\n</code></pre> <p>Displays in the current cell in Notebooks.</p>"},{"location":"docs/gui/","title":"tqdm.gui","text":""},{"location":"docs/gui/#tqdmgui","title":"tqdm.gui","text":"<p>Matplotlib GUI progressbar decorator for iterators.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.gui import trange, tqdm\n&gt;&gt;&gt; for i in trange(10):\n...     ...\n</code></pre></p> <p></p>"},{"location":"docs/gui/#tqdm_gui-objects","title":"tqdm_gui Objects","text":"<p> [view source] </p> <pre><code>class tqdm_gui(std_tqdm)\n</code></pre> <p>Experimental Matplotlib GUI version of tqdm!</p> <p></p>"},{"location":"docs/gui/#tgrange","title":"tgrange","text":"<p> [view source] </p> <pre><code>def tgrange(*args, **kwargs)\n</code></pre> <p>Shortcut for <code>tqdm.gui.tqdm(range(*args), **kwargs)</code>.</p>"},{"location":"docs/keras/","title":"tqdm.keras","text":""},{"location":"docs/keras/#tqdmkeras","title":"tqdm.keras","text":""},{"location":"docs/keras/#tqdmcallback-objects","title":"TqdmCallback Objects","text":"<p> [view source] </p> <pre><code>class TqdmCallback(keras.callbacks.Callback)\n</code></pre> <p>Keras callback for epoch and batch progress.</p> <p></p>"},{"location":"docs/keras/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(epochs=None,\n             data_size=None,\n             batch_size=None,\n             verbose=1,\n             tqdm_class=tqdm_auto,\n             **tqdm_kwargs)\n</code></pre> <p>Parameters</p> <ul> <li>epochs: int, optional </li> <li>data_size: int, optional     Number of training pairs.</li> <li>batch_size: int, optional     Number of training pairs per batch.</li> <li>verbose: int     0: epoch, 1: batch (transient), 2: batch. [default: 1].     Will be set to <code>0</code> unless both <code>data_size</code> and <code>batch_size</code>     are given.</li> <li>tqdm_class: optional <code>tqdm</code> class to use for bars [default: <code>tqdm.auto.tqdm</code>].</li> <li>tqdm_kwargs: optional     Any other arguments used for all bars.</li> </ul> <p></p>"},{"location":"docs/keras/#display","title":"display","text":"<p> [view source] </p> <pre><code>def display()\n</code></pre> <p>Displays in the current cell in Notebooks.</p>"},{"location":"docs/notebook/","title":"tqdm.notebook","text":""},{"location":"docs/notebook/#tqdmnotebook","title":"tqdm.notebook","text":"<p>IPython/Jupyter Notebook progressbar decorator for iterators. Includes a default <code>range</code> iterator printing to <code>stderr</code>.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.notebook import trange, tqdm\n&gt;&gt;&gt; for i in trange(10):\n...     ...\n</code></pre></p> <p></p>"},{"location":"docs/notebook/#tqdm_notebook-objects","title":"tqdm_notebook Objects","text":"<p> [view source] </p> <pre><code>class tqdm_notebook(std_tqdm)\n</code></pre> <p>Experimental IPython/Jupyter Notebook widget using tqdm!</p> <p></p>"},{"location":"docs/notebook/#status_printer","title":"status_printer","text":"<p> [view source] </p> <pre><code>@staticmethod\ndef status_printer(_, total=None, desc=None, ncols=None)\n</code></pre> <p>Manage the printing of an IPython/Jupyter Notebook progress bar widget.</p> <p></p>"},{"location":"docs/notebook/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(*args, **kwargs)\n</code></pre> <p>Supports the usual <code>tqdm.tqdm</code> parameters as well as those listed below.</p> <p>Parameters</p> <ul> <li>display: Whether to call <code>display(self.container)</code> immediately     [default: True].</li> </ul> <p></p>"},{"location":"docs/notebook/#reset","title":"reset","text":"<p> [view source] </p> <pre><code>def reset(total=None)\n</code></pre> <p>Resets to 0 iterations for repeated use.</p> <p>Consider combining with <code>leave=True</code>.</p> <p>Parameters</p> <ul> <li>total: int or float, optional. Total to use for the new bar. </li> </ul> <p></p>"},{"location":"docs/notebook/#tnrange","title":"tnrange","text":"<p> [view source] </p> <pre><code>def tnrange(*args, **kwargs)\n</code></pre> <p>Shortcut for <code>tqdm.notebook.tqdm(range(*args), **kwargs)</code>.</p>"},{"location":"docs/rich/","title":"tqdm.rich","text":""},{"location":"docs/rich/#tqdmrich","title":"tqdm.rich","text":"<p><code>rich.progress</code> decorator for iterators.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.rich import trange, tqdm\n&gt;&gt;&gt; for i in trange(10):\n...     ...\n</code></pre></p> <p></p>"},{"location":"docs/rich/#tqdm_rich-objects","title":"tqdm_rich Objects","text":"<p> [view source] </p> <pre><code>class tqdm_rich(std_tqdm)\n</code></pre> <p>Experimental rich.progress GUI version of tqdm!</p> <p></p>"},{"location":"docs/rich/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(*args, **kwargs)\n</code></pre> <p>This class accepts the following parameters in addition to the parameters accepted by <code>tqdm</code>.</p> <p>Parameters</p> <ul> <li>progress: tuple, optional     arguments for <code>rich.progress.Progress()</code>.</li> <li>options: dict, optional     keyword arguments for <code>rich.progress.Progress()</code>.</li> </ul> <p></p>"},{"location":"docs/rich/#reset","title":"reset","text":"<p> [view source] </p> <pre><code>def reset(total=None)\n</code></pre> <p>Resets to 0 iterations for repeated use.</p> <p>Parameters</p> <ul> <li>total: int or float, optional. Total to use for the new bar. </li> </ul> <p></p>"},{"location":"docs/rich/#trrange","title":"trrange","text":"<p> [view source] </p> <pre><code>def trrange(*args, **kwargs)\n</code></pre> <p>Shortcut for <code>tqdm.rich.tqdm(range(*args), **kwargs)</code>.</p>"},{"location":"docs/shortcuts/","title":"Shortcuts","text":""},{"location":"docs/shortcuts/#tqdmautonotebook","title":"tqdm.autonotebook","text":"<p>Automatically choose between <code>tqdm.notebook</code> and <code>tqdm.std</code>.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.autonotebook import trange, tqdm\n&gt;&gt;&gt; for i in trange(10):\n...     ...\n</code></pre></p> <p></p>"},{"location":"docs/shortcuts/#tqdmcontribbells","title":"tqdm.contrib.bells","text":"<p>Even more features than <code>tqdm.auto</code> (all the bells &amp; whistles):</p> <ul> <li><code>tqdm.auto</code></li> <li><code>tqdm.tqdm.pandas</code></li> <li><code>tqdm.contrib.telegram</code><ul> <li>uses <code>${TQDM_TELEGRAM_TOKEN}</code> and <code>${TQDM_TELEGRAM_CHAT_ID}</code></li> </ul> </li> <li><code>tqdm.contrib.discord</code><ul> <li>uses <code>${TQDM_DISCORD_TOKEN}</code> and <code>${TQDM_DISCORD_CHANNEL_ID}</code></li> </ul> </li> </ul> <p></p>"},{"location":"docs/shortcuts/#tqdmauto","title":"tqdm.auto","text":"<p>Enables multiple commonly used features.</p> <p>Method resolution order:</p> <ul> <li><code>tqdm.autonotebook</code> without import warnings</li> <li><code>tqdm.asyncio</code></li> <li><code>tqdm.std</code> base class</li> </ul> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.auto import trange, tqdm\n&gt;&gt;&gt; for i in trange(10):\n...     ...\n</code></pre></p>"},{"location":"docs/tk/","title":"tqdm.tk","text":""},{"location":"docs/tk/#tqdmtk","title":"tqdm.tk","text":"<p>Tkinter GUI progressbar decorator for iterators.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm.tk import trange, tqdm\n&gt;&gt;&gt; for i in trange(10):\n...     ...\n</code></pre></p> <p></p>"},{"location":"docs/tk/#tqdm_tk-objects","title":"tqdm_tk Objects","text":"<p> [view source] </p> <pre><code>class tqdm_tk(std_tqdm)\n</code></pre> <p>Experimental Tkinter GUI version of tqdm!</p> <p>Note: Window interactivity suffers if <code>tqdm_tk</code> is not running within a Tkinter mainloop and values are generated infrequently. In this case, consider calling <code>tqdm_tk.refresh()</code> frequently in the Tk thread.</p> <p></p>"},{"location":"docs/tk/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(*args, **kwargs)\n</code></pre> <p>This class accepts the following parameters in addition to the parameters accepted by <code>tqdm</code>.</p> <p>Parameters</p> <ul> <li>grab: bool, optional     Grab the input across all windows of the process.</li> <li>tk_parent: <code>tkinter.Wm</code>, optional     Parent Tk window.</li> <li>cancel_callback: Callable, optional     Create a cancel button and set <code>cancel_callback</code> to be called     when the cancel or window close button is clicked.</li> </ul> <p></p>"},{"location":"docs/tk/#cancel","title":"cancel","text":"<p> [view source] </p> <pre><code>def cancel()\n</code></pre> <p><code>cancel_callback()</code> followed by <code>close()</code> when close/cancel buttons clicked.</p> <p></p>"},{"location":"docs/tk/#reset","title":"reset","text":"<p> [view source] </p> <pre><code>def reset(total=None)\n</code></pre> <p>Resets to 0 iterations for repeated use.</p> <p>Parameters</p> <ul> <li>total: int or float, optional. Total to use for the new bar. </li> </ul> <p></p>"},{"location":"docs/tk/#ttkrange","title":"ttkrange","text":"<p> [view source] </p> <pre><code>def ttkrange(*args, **kwargs)\n</code></pre> <p>Shortcut for <code>tqdm.tk.tqdm(range(*args), **kwargs)</code>.</p>"},{"location":"docs/tqdm/","title":"tqdm.tqdm","text":""},{"location":"docs/tqdm/#tqdmstd","title":"tqdm.std","text":"<p>Customisable progressbar decorator for iterators. Includes a default <code>range</code> iterator printing to <code>stderr</code>.</p> <p>Usage: <pre><code>&gt;&gt;&gt; from tqdm import trange, tqdm\n&gt;&gt;&gt; for i in trange(10):\n...     ...\n</code></pre></p> <p></p>"},{"location":"docs/tqdm/#tqdm-objects","title":"tqdm Objects","text":"<p> [view source] </p> <pre><code>class tqdm(Comparable)\n</code></pre> <p>Decorate an iterable object, returning an iterator which acts exactly like the original iterable, but prints a dynamically updating progressbar every time a value is requested.</p> <p></p>"},{"location":"docs/tqdm/#monitor_interval","title":"monitor_interval","text":"<p>set to 0 to disable the thread</p> <p></p>"},{"location":"docs/tqdm/#format_sizeof","title":"format_sizeof","text":"<p> [view source] </p> <pre><code>@staticmethod\ndef format_sizeof(num, suffix='', divisor=1000)\n</code></pre> <p>Formats a number (greater than unity) with SI Order of Magnitude prefixes.</p> <p>Parameters</p> <ul> <li>num: float     Number ( &gt;= 1) to format.</li> <li>suffix: str, optional     Post-postfix [default: ''].</li> <li>divisor: float, optional     Divisor between prefixes [default: 1000].</li> </ul> <p>Returns</p> <ul> <li>out: str     Number with Order of Magnitude SI unit postfix.</li> </ul> <p></p>"},{"location":"docs/tqdm/#format_interval","title":"format_interval","text":"<p> [view source] </p> <pre><code>@staticmethod\ndef format_interval(t)\n</code></pre> <p>Formats a number of seconds as a clock time, [H:]MM:SS</p> <p>Parameters</p> <ul> <li>t: int     Number of seconds.</li> </ul> <p>Returns</p> <ul> <li>out: str     [H:]MM:SS</li> </ul> <p></p>"},{"location":"docs/tqdm/#format_num","title":"format_num","text":"<p> [view source] </p> <pre><code>@staticmethod\ndef format_num(n)\n</code></pre> <p>Intelligent scientific notation (.3g).</p> <p>Parameters</p> <ul> <li>n: int or float or Numeric     A Number.</li> </ul> <p>Returns</p> <ul> <li>out: str     Formatted number.</li> </ul> <p></p>"},{"location":"docs/tqdm/#status_printer","title":"status_printer","text":"<p> [view source] </p> <pre><code>@staticmethod\ndef status_printer(file)\n</code></pre> <p>Manage the printing and in-place updating of a line of characters. Note that if the string is longer than a line, then in-place updating may not work (it will print a new line at each refresh).</p> <p></p>"},{"location":"docs/tqdm/#format_meter","title":"format_meter","text":"<p> [view source] </p> <pre><code>@staticmethod\ndef format_meter(n,\n                 total,\n                 elapsed,\n                 ncols=None,\n                 prefix='',\n                 ascii=False,\n                 unit='it',\n                 unit_scale=False,\n                 rate=None,\n                 bar_format=None,\n                 postfix=None,\n                 unit_divisor=1000,\n                 initial=0,\n                 colour=None,\n                 **extra_kwargs)\n</code></pre> <p>Return a string-based progress bar given some parameters</p> <p>Parameters</p> <ul> <li>n: int or float     Number of finished iterations.</li> <li>total: int or float     The expected total number of iterations. If meaningless (None),     only basic progress statistics are displayed (no ETA).</li> <li>elapsed: float     Number of seconds passed since start.</li> <li>ncols: int, optional     The width of the entire output message. If specified,     dynamically resizes <code>{bar}</code> to stay within this bound     [default: None]. If <code>0</code>, will not print any bar (only stats).     The fallback is <code>{bar:10}</code>.</li> <li>prefix: str, optional     Prefix message (included in total width) [default: ''].     Use as {desc} in bar_format string.</li> <li>ascii: bool, optional or str, optional     If not set, use unicode (smooth blocks) to fill the meter     [default: False]. The fallback is to use ASCII characters     \" 123456789#\".</li> <li>unit: str, optional     The iteration unit [default: 'it'].</li> <li>unit_scale: bool or int or float, optional     If 1 or True, the number of iterations will be printed with an     appropriate SI metric prefix (k = 10^3, M = 10^6, etc.)     [default: False]. If any other non-zero number, will scale     <code>total</code> and <code>n</code>.</li> <li>rate: float, optional     Manual override for iteration rate.     If [default: None], uses n/elapsed.</li> <li>bar_format: str, optional     Specify a custom bar string formatting. May impact performance.     [default: '{l_bar}{bar}{r_bar}'], where     l_bar='{desc}: {percentage:3.0f}%|' and     r_bar='| {n_fmt}/{total_fmt} [{elapsed}&lt;{remaining}, '       '{rate_fmt}{postfix}]'     Possible vars: l_bar, bar, r_bar, n, n_fmt, total, total_fmt,       percentage, elapsed, elapsed_s, ncols, nrows, desc, unit,       rate, rate_fmt, rate_noinv, rate_noinv_fmt,       rate_inv, rate_inv_fmt, postfix, unit_divisor,       remaining, remaining_s, eta.     Note that a trailing \": \" is automatically removed after {desc}     if the latter is empty.</li> <li>postfix: *, optional     Similar to <code>prefix</code>, but placed at the end     (e.g. for additional stats).     Note: postfix is usually a string (not a dict) for this method,     and will if possible be set to postfix = ', ' + postfix.     However other types are supported (<code>382</code>).</li> <li>unit_divisor: float, optional     [default: 1000], ignored unless <code>unit_scale</code> is True.</li> <li>initial: int or float, optional     The initial counter value [default: 0].</li> <li>colour: str, optional     Bar colour (e.g. 'green', '<code>00ff00</code>').</li> </ul> <p>Returns</p> <ul> <li>out: Formatted meter and stats, ready to display. </li> </ul> <p></p>"},{"location":"docs/tqdm/#write","title":"write","text":"<p> [view source] </p> <pre><code>@classmethod\ndef write(cls, s, file=None, end=\"\\n\", nolock=False)\n</code></pre> <p>Print a message via tqdm (without overlap with bars).</p> <p></p>"},{"location":"docs/tqdm/#external_write_mode","title":"external_write_mode","text":"<p> [view source] </p> <pre><code>@classmethod\n@contextmanager\ndef external_write_mode(cls, file=None, nolock=False)\n</code></pre> <p>Disable tqdm within context and refresh tqdm when exits. Useful when writing to standard output stream</p> <p></p>"},{"location":"docs/tqdm/#set_lock","title":"set_lock","text":"<p> [view source] </p> <pre><code>@classmethod\ndef set_lock(cls, lock)\n</code></pre> <p>Set the global lock.</p> <p></p>"},{"location":"docs/tqdm/#get_lock","title":"get_lock","text":"<p> [view source] </p> <pre><code>@classmethod\ndef get_lock(cls)\n</code></pre> <p>Get the global lock. Construct it if it does not exist.</p> <p></p>"},{"location":"docs/tqdm/#pandas","title":"pandas","text":"<p> [view source] </p> <pre><code>@classmethod\ndef pandas(cls, **tqdm_kwargs)\n</code></pre> <p>Registers the current <code>tqdm</code> class with     pandas.core.     ( frame.DataFrame     | series.Series     | groupby.(generic.)DataFrameGroupBy     | groupby.(generic.)SeriesGroupBy     ).progress_apply</p> <p>A new instance will be created every time <code>progress_apply</code> is called, and each instance will automatically <code>close()</code> upon completion.</p> <p>Parameters</p> <ul> <li>tqdm_kwargs: arguments for the tqdm instance </li> </ul> <p>Examples</p> <pre><code>&gt;&gt;&gt; import pandas as pd\n&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; from tqdm import tqdm\n&gt;&gt;&gt; from tqdm.gui import tqdm as tqdm_gui\n&gt;&gt;&gt;\n&gt;&gt;&gt; df = pd.DataFrame(np.random.randint(0, 100, (100000, 6)))\n&gt;&gt;&gt; tqdm.pandas(ncols=50)  # can use tqdm_gui, optional kwargs, etc\n&gt;&gt;&gt; # Now you can use `progress_apply` instead of `apply`\n&gt;&gt;&gt; df.groupby(0).progress_apply(lambda x: x**2)\n</code></pre> <p>References</p> <p>https://stackoverflow.com/questions/18603270/        progress-indicator-during-pandas-operations-python</p> <p></p>"},{"location":"docs/tqdm/#__init__","title":"__init__","text":"<p> [view source] </p> <pre><code>def __init__(iterable=None,\n             desc=None,\n             total=None,\n             leave=True,\n             file=None,\n             ncols=None,\n             mininterval=0.1,\n             maxinterval=10.0,\n             miniters=None,\n             ascii=None,\n             disable=False,\n             unit='it',\n             unit_scale=False,\n             dynamic_ncols=False,\n             smoothing=0.3,\n             bar_format=None,\n             initial=0,\n             position=None,\n             postfix=None,\n             unit_divisor=1000,\n             write_bytes=False,\n             lock_args=None,\n             nrows=None,\n             colour=None,\n             delay=0,\n             gui=False,\n             **kwargs)\n</code></pre> <p>Parameters</p> <ul> <li>iterable: iterable, optional     Iterable to decorate with a progressbar.     Leave blank to manually manage the updates.</li> <li>desc: str, optional     Prefix for the progressbar.</li> <li>total: int or float, optional     The number of expected iterations. If unspecified,     len(iterable) is used if possible. If float(\"inf\") or as a last     resort, only basic progress statistics are displayed     (no ETA, no progressbar).     If <code>gui</code> is True and this parameter needs subsequent updating,     specify an initial arbitrary large positive number,     e.g. 9e9.</li> <li>leave: bool, optional     If [default: True], keeps all traces of the progressbar     upon termination of iteration.     If <code>None</code>, will leave only if <code>position</code> is <code>0</code>.</li> <li>file: <code>io.TextIOWrapper</code> or <code>io.StringIO</code>, optional     Specifies where to output the progress messages     (default: sys.stderr). Uses <code>file.write(str)</code> and <code>file.flush()</code>     methods.  For encoding, see <code>write_bytes</code>.</li> <li>ncols: int, optional     The width of the entire output message. If specified,     dynamically resizes the progressbar to stay within this bound.     If unspecified, attempts to use environment width. The     fallback is a meter width of 10 and no limit for the counter and     statistics. If 0, will not print any meter (only stats).</li> <li>mininterval: float, optional     Minimum progress display update interval [default: 0.1] seconds.</li> <li>maxinterval: float, optional     Maximum progress display update interval [default: 10] seconds.     Automatically adjusts <code>miniters</code> to correspond to <code>mininterval</code>     after long display update lag. Only works if <code>dynamic_miniters</code>     or monitor thread is enabled.</li> <li>miniters: int or float, optional     Minimum progress display update interval, in iterations.     If 0 and <code>dynamic_miniters</code>, will automatically adjust to equal     <code>mininterval</code> (more CPU efficient, good for tight loops).     If &gt; 0, will skip display of specified number of iterations.     Tweak this and <code>mininterval</code> to get very efficient loops.     If your progress is erratic with both fast and slow iterations     (network, skipping items, etc) you should set miniters=1.</li> <li>ascii: bool or str, optional     If unspecified or False, use unicode (smooth blocks) to fill     the meter. The fallback is to use ASCII characters \" 123456789#\".</li> <li>disable: bool, optional     Whether to disable the entire progressbar wrapper     [default: False]. If set to None, disable on non-TTY.</li> <li>unit: str, optional     String that will be used to define the unit of each iteration     [default: it].</li> <li>unit_scale: bool or int or float, optional     If 1 or True, the number of iterations will be reduced/scaled     automatically and a metric prefix following the     International System of Units standard will be added     (kilo, mega, etc.) [default: False]. If any other non-zero     number, will scale <code>total</code> and <code>n</code>.</li> <li>dynamic_ncols: bool, optional     If set, constantly alters <code>ncols</code> and <code>nrows</code> to the     environment (allowing for window resizes) [default: False].</li> <li>smoothing: float, optional     Exponential moving average smoothing factor for speed estimates     (ignored in GUI mode). Ranges from 0 (average speed) to 1     (current/instantaneous speed) [default: 0.3].</li> <li>bar_format: str, optional     Specify a custom bar string formatting. May impact performance.     [default: '{l_bar}{bar}{r_bar}'], where     l_bar='{desc}: {percentage:3.0f}%|' and     r_bar='| {n_fmt}/{total_fmt} [{elapsed}&lt;{remaining}, '       '{rate_fmt}{postfix}]'     Possible vars: l_bar, bar, r_bar, n, n_fmt, total, total_fmt,       percentage, elapsed, elapsed_s, ncols, nrows, desc, unit,       rate, rate_fmt, rate_noinv, rate_noinv_fmt,       rate_inv, rate_inv_fmt, postfix, unit_divisor,       remaining, remaining_s, eta.     Note that a trailing \": \" is automatically removed after {desc}     if the latter is empty.</li> <li>initial: int or float, optional     The initial counter value. Useful when restarting a progress     bar [default: 0]. If using float, consider specifying <code>{n:.3f}</code>     or similar in <code>bar_format</code>, or specifying <code>unit_scale</code>.</li> <li>position: int, optional     Specify the line offset to print this bar (starting from 0)     Automatic if unspecified.     Useful to manage multiple bars at once (eg, from threads).</li> <li>postfix: dict or *, optional     Specify additional stats to display at the end of the bar.     Calls <code>set_postfix(**postfix)</code> if possible (dict).</li> <li>unit_divisor: float, optional     [default: 1000], ignored unless <code>unit_scale</code> is True.</li> <li>write_bytes: bool, optional     Whether to write bytes. If (default: False) will write unicode.</li> <li>lock_args: tuple, optional     Passed to <code>refresh</code> for intermediate output     (initialisation, iterating, and updating).</li> <li>nrows: int, optional     The screen height. If specified, hides nested bars outside this     bound. If unspecified, attempts to use environment height.     The fallback is 20.</li> <li>colour: str, optional     Bar colour (e.g. 'green', '<code>00ff00</code>').</li> <li>delay: float, optional     Don't display until [default: 0] seconds have elapsed.</li> <li>gui: bool, optional     WARNING: internal parameter - do not use.     Use tqdm.gui.tqdm(...) instead. If set, will attempt to use     matplotlib animations for a graphical output [default: False].</li> </ul> <p>Returns</p> <ul> <li>out: decorated iterator. </li> </ul> <p></p>"},{"location":"docs/tqdm/#__iter__","title":"__iter__","text":"<p> [view source] </p> <pre><code>def __iter__()\n</code></pre> <p>Backward-compatibility to use: for x in tqdm(iterable)</p> <p></p>"},{"location":"docs/tqdm/#update","title":"update","text":"<p> [view source] </p> <pre><code>def update(n=1)\n</code></pre> <p>Manually update the progress bar, useful for streams such as reading files. E.g.: <pre><code>&gt;&gt;&gt; t = tqdm(total=filesize) # Initialise\n&gt;&gt;&gt; for current_buffer in stream:\n...    ...\n...    t.update(len(current_buffer))\n&gt;&gt;&gt; t.close()\n</code></pre> The last line is highly recommended, but possibly not necessary if <code>t.update()</code> will be called in such a way that <code>filesize</code> will be exactly reached and printed.</p> <p>Parameters</p> <ul> <li>n: int or float, optional     Increment to add to the internal counter of iterations     [default: 1]. If using float, consider specifying <code>{n:.3f}</code>     or similar in <code>bar_format</code>, or specifying <code>unit_scale</code>.</li> </ul> <p>Returns</p> <ul> <li>out: bool or None     True if a <code>display()</code> was triggered.</li> </ul> <p></p>"},{"location":"docs/tqdm/#close","title":"close","text":"<p> [view source] </p> <pre><code>def close()\n</code></pre> <p>Cleanup and (if leave=False) close the progressbar.</p> <p></p>"},{"location":"docs/tqdm/#clear","title":"clear","text":"<p> [view source] </p> <pre><code>def clear(nolock=False)\n</code></pre> <p>Clear current bar display.</p> <p></p>"},{"location":"docs/tqdm/#refresh","title":"refresh","text":"<p> [view source] </p> <pre><code>def refresh(nolock=False, lock_args=None)\n</code></pre> <p>Force refresh the display of this bar.</p> <p>Parameters</p> <ul> <li>nolock: bool, optional     If <code>True</code>, does not lock.     If [default: <code>False</code>]: calls <code>acquire()</code> on internal lock.</li> <li>lock_args: tuple, optional     Passed to internal lock's <code>acquire()</code>.     If specified, will only <code>display()</code> if <code>acquire()</code> returns <code>True</code>.</li> </ul> <p></p>"},{"location":"docs/tqdm/#unpause","title":"unpause","text":"<p> [view source] </p> <pre><code>def unpause()\n</code></pre> <p>Restart tqdm timer from last print time.</p> <p></p>"},{"location":"docs/tqdm/#reset","title":"reset","text":"<p> [view source] </p> <pre><code>def reset(total=None)\n</code></pre> <p>Resets to 0 iterations for repeated use.</p> <p>Consider combining with <code>leave=True</code>.</p> <p>Parameters</p> <ul> <li>total: int or float, optional. Total to use for the new bar. </li> </ul> <p></p>"},{"location":"docs/tqdm/#set_description","title":"set_description","text":"<p> [view source] </p> <pre><code>def set_description(desc=None, refresh=True)\n</code></pre> <p>Set/modify description of the progress bar.</p> <p>Parameters</p> <ul> <li>desc: str, optional </li> <li>refresh: bool, optional     Forces refresh [default: True].</li> </ul> <p></p>"},{"location":"docs/tqdm/#set_description_str","title":"set_description_str","text":"<p> [view source] </p> <pre><code>def set_description_str(desc=None, refresh=True)\n</code></pre> <p>Set/modify description without ': ' appended.</p> <p></p>"},{"location":"docs/tqdm/#set_postfix","title":"set_postfix","text":"<p> [view source] </p> <pre><code>def set_postfix(ordered_dict=None, refresh=True, **kwargs)\n</code></pre> <p>Set/modify postfix (additional stats) with automatic formatting based on datatype.</p> <p>Parameters</p> <ul> <li>ordered_dict: dict or OrderedDict, optional </li> <li>refresh: bool, optional     Forces refresh [default: True].</li> <li>kwargs: dict, optional </li> </ul> <p></p>"},{"location":"docs/tqdm/#set_postfix_str","title":"set_postfix_str","text":"<p> [view source] </p> <pre><code>def set_postfix_str(s='', refresh=True)\n</code></pre> <p>Postfix without dictionary expansion, similar to prefix handling.</p> <p></p>"},{"location":"docs/tqdm/#format_dict","title":"format_dict","text":"<p> [view source] </p> <pre><code>@property\ndef format_dict()\n</code></pre> <p>Public API for read-only member access.</p> <p></p>"},{"location":"docs/tqdm/#display","title":"display","text":"<p> [view source] </p> <pre><code>def display(msg=None, pos=None)\n</code></pre> <p>Use <code>self.sp</code> to display <code>msg</code> in the specified <code>pos</code>.</p> <p>Consider overloading this function when inheriting to use e.g.: <code>self.some_frontend(**self.format_dict)</code> instead of <code>self.sp</code>.</p> <p>Parameters</p> <ul> <li>msg: str, optional. What to display (default: <code>repr(self)</code>). </li> <li>pos: int, optional. Position to <code>moveto</code>   (default: <code>abs(self.pos)</code>).</li> </ul> <p></p>"},{"location":"docs/tqdm/#wrapattr","title":"wrapattr","text":"<p> [view source] </p> <pre><code>@classmethod\n@contextmanager\ndef wrapattr(cls, stream, method, total=None, bytes=True, **tqdm_kwargs)\n</code></pre> <ul> <li>stream: file-like object. </li> <li>method: str, \"read\" or \"write\". The result of <code>read()</code> and     the first argument of <code>write()</code> should have a <code>len()</code>.</li> </ul> <pre><code>&gt;&gt;&gt; with tqdm.wrapattr(file_obj, \"read\", total=file_obj.size) as fobj:\n...     while True:\n...         chunk = fobj.read(chunk_size)\n...         if not chunk:\n...             break\n</code></pre> <p></p>"},{"location":"docs/tqdm/#trange","title":"trange","text":"<p> [view source] </p> <pre><code>def trange(*args, **kwargs)\n</code></pre> <p>Shortcut for tqdm(range(args), *kwargs).</p>"},{"location":"presentation-%28pydata%29/video/","title":"Video","text":"<ul> <li>Slides (<code>space</code> &amp; <code>shift</code>+<code>space</code> for navigation)</li> </ul>"}]}